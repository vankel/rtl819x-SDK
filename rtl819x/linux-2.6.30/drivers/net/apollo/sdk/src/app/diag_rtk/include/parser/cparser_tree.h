/*----------------------------------------------------------------------
 * This file is generated by mk_parser.py.
 *----------------------------------------------------------------------*/
#ifndef __CPARSER_TREE_H__
#define __CPARSER_TREE_H__

extern cparser_node_t cparser_root;

cparser_result_t cparser_cmd_exit(cparser_context_t *context);
cparser_result_t cparser_cmd_sdk_test_group_item(cparser_context_t *context,
    char **item_ptr);
cparser_result_t cparser_cmd_sdk_test_case_id_start_end(cparser_context_t *context,
    uint32_t *start_ptr,
    uint32_t *end_ptr);
cparser_result_t cparser_cmd_classf_show_rule(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_init(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_add_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_del_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_del_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_get_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_get_upstream_unmatch_act(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_get_cf_sel_port(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_get_range_ip_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_get_range_l4port_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_get_remarking_dscp(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_rule_direction_upstream_downstream(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_rule_tos_sid_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_tag_vid_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_tag_priority_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_internal_priority_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_svlan_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_cvlan_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_uni_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_ether_type_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_range_l4port_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_range_ip_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_hit_acl_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_wan_if_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_ipmc_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_ip6mc_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_igmp_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_mld_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_rule_dei_bit_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_classf_set_operation_entry_index_upstream_downstream_hit_not(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_svlan_act_nop_vs_tpid_c_tpid_del_transparent(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_cvlan_act_nop_c_tag_c2s_del_transparent(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_svlan_id_act_assign_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_svlan_id_act_copy_outer_copy_inner(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_svlan_priority_act_assign_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_svlan_priority_act_copy_outer_copy_inner_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_cvlan_id_act_assign_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_cvlan_id_act_copy_outer_copy_inner_internal_vid(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_cvlan_priority_act_assign_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_cvlan_priority_act_copy_outer_copy_inner_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_sid_act_sid_qid_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_priority_act_follow_swcore(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_priority_act_assign_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_upstream_action_remark_dscp_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_drop_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_action_statistic_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_svlan_act_nop_vs_tpid_c_tpid_del_transparent_sp2c(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_svlan_id_act_assign_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_svlan_id_act_copy_outer_copy_inner(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_svlan_priority_act_assign_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_svlan_priority_act_copy_outer_copy_inner_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_cvlan_act_nop_c_tag_sp2c_del_transparent(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_cvlan_id_act_follow_swcore_copy_outer_copy_inner_lookup_table(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_cvlan_id_act_assign_cvid(cparser_context_t *context,
    uint32_t *cvid_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_cvlan_priority_act_follow_swcore_copy_outer_copy_inner_internal_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_cvlan_priority_act_assign_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_priority_act_follow_swcore(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_downstream_action_priority_act_assign_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_uni_forward_act_flood_forced_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_classf_set_downstream_action_remark_dscp_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_upstream_unmatch_act_drop_permit_permit_without_pon(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_cf_sel_port_pon_rg_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_classf_set_range_ip_entry_index_type_sip_dip(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_set_range_ip_entry_index_low_bound_low_bound_ip_up_bound_up_bound_ip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *low_bound_ip_ptr,
    uint32_t *up_bound_ip_ptr);
cparser_result_t cparser_cmd_classf_set_range_l4port_entry_index_type_src_port_dst_port(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_classf_set_range_l4port_entry_index_low_bound_l4lport_up_bound_l4uport(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *l4lport_ptr,
    uint32_t *l4uport_ptr);
cparser_result_t cparser_cmd_classf_set_remarking_dscp_priority_priority_dscp_dscp(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_acl_init(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_show(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_show_action(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_show_template(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_clear_action(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_clear_template(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_add_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_add_del_get_template_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_del_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_del_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_get_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_entry_index_action(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_range_vid_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_range_ip_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_range_l4port_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_range_length_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_get_port_ports_all_permit(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_get_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_get_log_mode_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_log_type_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_get_reason(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_get_reason_all_cvlan_svlan_priority_policing_forward_extend(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_rule_dmac_smac_data_mac_mask_mac_mask(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    cparser_macaddr_t *mac_mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_dmac_smac_data_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_acl_set_rule_sip_dip_data_ip_mask_ip_mask(cparser_context_t *context,
    uint32_t *ip_ptr,
    uint32_t *ip_mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_sip_dip_data_ip(cparser_context_t *context,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_acl_set_rule_sip6_dip6_data_ip6(cparser_context_t *context,
    char **ip6_ptr);
cparser_result_t cparser_cmd_acl_set_rule_sip6_dip6_data_ip6_mask_ip6_mask(cparser_context_t *context,
    char **ip6_ptr,
    char **ip6_mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_ethertype_gemport_llid_next_header_data_data(cparser_context_t *context,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_acl_set_rule_ethertype_gemport_llid_next_header_data_data_mask_mask(cparser_context_t *context,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_range_l4port_care_range_list(cparser_context_t *context,
    char **list_ptr);
cparser_result_t cparser_cmd_acl_set_rule_range_l4port_care_range_list_none_mask_range_mask(cparser_context_t *context,
    char **list_ptr,
    char **mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_range_vid_range_ip_range_length_care_range_list(cparser_context_t *context,
    char **list_ptr);
cparser_result_t cparser_cmd_acl_set_rule_range_vid_range_ip_range_length_care_range_list_none_mask_range_mask(cparser_context_t *context,
    char **list_ptr,
    char **mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_ctag_data_vid_vid_priority_priority_cfi_cfi(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr,
    uint32_t *cfi_ptr);
cparser_result_t cparser_cmd_acl_set_rule_ctag_data_vid_vid_priority_priority_cfi_cfi_mask_vid_vid_mask_priority_priority_mask_cfi_cfi_mask(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr,
    uint32_t *cfi_ptr,
    uint32_t *vid_mask_ptr,
    uint32_t *priority_mask_ptr,
    uint32_t *cfi_mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_stag_data_vid_vid_priority_priority_dei_dei(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr,
    uint32_t *dei_ptr);
cparser_result_t cparser_cmd_acl_set_rule_stag_data_vid_vid_priority_priority_dei_dei_mask_vid_vid_mask_priority_priority_mask_dei_dei_mask(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr,
    uint32_t *dei_ptr,
    uint32_t *vid_mask_ptr,
    uint32_t *priority_mask_ptr,
    uint32_t *dei_mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_user_field_index_data_data(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_acl_set_rule_user_field_index_data_data_mask_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_pattern_field_index_index_data_data(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_acl_set_rule_pattern_field_index_index_data_data_mask_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *data_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_acl_set_rule_care_tags_ctag_ip_ipv6_pppoe_stag_tcp_udp(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_rule_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_set_rule_template_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_rule_operation_reverse_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_rule_state_valid_invalid(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_range_vid_entry_index_state_invalid_valid(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_range_vid_entry_index_type_svid_cvid(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_range_vid_entry_index_low_bound_vid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_acl_set_range_vid_entry_index_up_bound_vid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_acl_set_range_ip_entry_index_state_invalid_valid(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_range_ip_entry_index_type_sip_dip_sip6_dip6(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_range_ip_entry_index_low_bound_low_bound_ip_up_bound_up_bound_ip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *low_bound_ip_ptr,
    uint32_t *up_bound_ip_ptr);
cparser_result_t cparser_cmd_acl_set_range_l4port_entry_index_state_invalid_valid(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_range_l4port_entry_index_type_src_port_dst_port(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_range_l4port_entry_index_low_bound_l4port(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *l4port_ptr);
cparser_result_t cparser_cmd_acl_set_range_l4port_entry_index_up_bound_l4port(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *l4port_ptr);
cparser_result_t cparser_cmd_acl_set_range_length_entry_index_low_bound_length(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_acl_set_range_length_entry_index_up_bound_length(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_acl_set_range_length_entry_index_reverse_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_set_port_ports_all_permit_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_set_action_cvlan_ingress_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_acl_set_action_cvlan_egress_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_acl_set_action_cvlan_using_svid(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_cvlan_meter_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_cvlan_statistic_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_cvlan_remark_dot1p_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_ingress_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_egress_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_using_cvid(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_svlan_meter_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_statistic_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_remark_dscp_dscp(cparser_context_t *context,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_acl_set_action_svlan_remark_dot1p_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_acl_set_action_priority_assign_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_acl_set_action_priority_remark_dscp_dscp(cparser_context_t *context,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_acl_set_action_priority_remark_dot1p_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_acl_set_action_priority_meter_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_priority_statistic_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_meter_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_statistic_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_action_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_copy_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_set_action_redirect_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_set_action_mirror_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_acl_set_action_interrupt(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_latch_index(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_classf_none(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_action_classf_sid_sid(cparser_context_t *context,
    uint32_t *sid_ptr);
cparser_result_t cparser_cmd_acl_set_action_classf_llid_llid(cparser_context_t *context,
    uint32_t *llid_ptr);
cparser_result_t cparser_cmd_acl_set_action_classf_ext_member_ext_all(cparser_context_t *context,
    char **ext_ptr);
cparser_result_t cparser_cmd_acl_set_action_none(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_stag_ctag_ethertype_gem_llid_ipv6_next_header_unknown_range_ip(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_dip_sip_range_length(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_smac_dmac_range_l4port(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_sip6_dip6_range_vid(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_template_user_field_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_mode_64_entries_128_entries(cparser_context_t *context);
cparser_result_t cparser_cmd_acl_set_log_mode_index_index_bits_32_bits_64(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_set_log_type_index_index_byte_count_packet_count(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_dump_log_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_acl_reset_log_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_field_selector_set_index_index_format_default_raw_llc_arp_ipv4_header_ipv6_header_ip_payload_l4_payload_offset_offset(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *offset_ptr);
cparser_result_t cparser_cmd_field_selector_get_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_init(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_create_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_destroy_all(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_destroy_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_dump(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_dump_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_svid_svid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_member_ports_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_tag_member_untag_member_ports_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_priority_priority(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_fid_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_fid_fid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *fid_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_enhanced_fid_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_set_entry_index_enhanced_fid_efid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *efid_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_c2s_entry_index_enhanced_vid_evid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *evid_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_c2s_entry_index_member_ports_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_c2s_entry_index_svlan_index_svidx(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *svidx_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_mc2s_entry_index_state_invalid_valid(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_mc2s_entry_index_format_dip_dmac(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_mc2s_entry_index_ip_ip_ip_mask_ip_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr,
    uint32_t *ip_mask_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_mc2s_entry_index_mac_address_mac_mac_mask_mac_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    cparser_macaddr_t *mac_ptr,
    cparser_macaddr_t *mac_mask_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_mc2s_entry_index_svlan_index_svidx(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *svidx_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_sp2c_entry_index_state_invalid_valid(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_sp2c_entry_index_svlan_index_svidx(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *svidx_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_sp2c_entry_index_port_port(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_sp2c_entry_index_vid_vid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_conversion_sp2c_unmatch_action_untag_ctag(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_port_ports_all_svid_svid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_set_port_ports_all_svlan_index_svidx(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *svidx_ptr);
cparser_result_t cparser_cmd_svlan_set_priority_source_internal_priority_dot1q_priority_svlan_member_config_port_based_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_service_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_svlan_table_svid_svid_member_ports_all_none(cparser_context_t *context,
    uint32_t *svid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_svlan_table_svid_svid_tag_member_ports_all_none(cparser_context_t *context,
    uint32_t *svid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_svlan_table_svid_svid_untag_member_ports_all_none(cparser_context_t *context,
    uint32_t *svid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_tpid_tpid(cparser_context_t *context,
    uint32_t *tpid_ptr);
cparser_result_t cparser_cmd_svlan_set_trap_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_svlan_set_unmatch_drop_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_unmatch_assign_svlan_assign_and_keep_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_set_untag_drop_trap_to_cpu_using_cvid(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_untag_assign_svlan_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_set_vlan_aggregation_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_set_dei_keep_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_set_lookup_type_svlan_table_vlan_4k_table(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_get_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_c2s_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_c2s_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_c2s_vid_vid_port_ports_all(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_mc2s_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_mc2s_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_mc2s_ip_ip_ip_mask_ip_mask(cparser_context_t *context,
    uint32_t *ip_ptr,
    uint32_t *ip_mask_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_mc2s_mac_address_mac_mac_mask_mac_mask(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    cparser_macaddr_t *mac_mask_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_sp2c_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_sp2c_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_sp2c_svid_svid_port_port(cparser_context_t *context,
    uint32_t *svid_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_svlan_get_vlan_conversion_sp2c_unmatch_action(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_port_ports_all_svid(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_get_port_ports_all_svlan_index(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_get_priority_source(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_service_port(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_svlan_table_svid_svid(cparser_context_t *context,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_get_tpid(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_trap_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_unmatch(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_untag(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_vlan_aggregation_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_svlan_get_dei_keep_state(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_get_lookup_type(cparser_context_t *context);
cparser_result_t cparser_cmd_svlan_del_vlan_conversion_c2s_vid_vid_port_ports_all_svid_svid(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_del_vlan_conversion_mc2s_ip_ip_ip_mask_ip_mask(cparser_context_t *context,
    uint32_t *ip_ptr,
    uint32_t *ip_mask_ptr);
cparser_result_t cparser_cmd_svlan_del_vlan_conversion_mc2s_mac_address_mac_mac_mask_mac_mask(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    cparser_macaddr_t *mac_mask_ptr);
cparser_result_t cparser_cmd_svlan_del_vlan_conversion_sp2c_svid_svid_port_port(cparser_context_t *context,
    uint32_t *svid_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_svlan_add_vlan_conversion_c2s_vid_vid_port_ports_all_svid_svid(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_add_vlan_conversion_mc2s_ip_ip_ip_mask_ip_mask_svid_svid(cparser_context_t *context,
    uint32_t *ip_ptr,
    uint32_t *ip_mask_ptr,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_add_vlan_conversion_mc2s_mac_address_mac_mac_mask_mac_mask_svid_svid(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr,
    cparser_macaddr_t *mac_mask_ptr,
    uint32_t *svid_ptr);
cparser_result_t cparser_cmd_svlan_add_vlan_conversion_sp2c_svid_svid_port_port_vid_vid(cparser_context_t *context,
    uint32_t *svid_ptr,
    uint32_t *port_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_init(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_create_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_destroy_all(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_destroy_all_untag(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_destroy_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_destroy_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_state(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_transparent_state(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_vlan_treat_vid_0_4095_type(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_accept_frame_type_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_egress_port_egr_ports_all_keep_tag_ingress_port_igr_ports_all_state(cparser_context_t *context,
    char **egr_ports_ptr,
    char **igr_ports_ptr);
cparser_result_t cparser_cmd_vlan_get_ingress_filter_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_entry_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_entry_all(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_protocol_vlan_group_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_get_protocol_vlan_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_pvid_port_ports_all_vlan_index(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_pvid_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_ext_pvid_port_ports_vlan_index(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_tag_mode_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_vlan_table_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_get_cfi_keep(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_get_port_based_fid_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_port_based_pri_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_get_leaky_ip_mcast_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_set_transparent_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_set_vlan_treat_vid_0_4095_type_tagging_un_tagging(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_set_accept_frame_type_port_ports_all_all_tag_only_untag_only_priority_tag_and_tag(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_egress_port_egr_ports_all_keep_tag_ingress_port_igr_ports_all_state_enable_disable(cparser_context_t *context,
    char **egr_ports_ptr,
    char **igr_ports_ptr);
cparser_result_t cparser_cmd_vlan_set_ingress_filter_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_enhanced_vid_evid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *evid_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_filter_id_fid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *fid_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_member_ports_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_ext_member_ext_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_vlan_based_policing_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_meter_meter(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *meter_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_vlan_based_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_entry_index_vlan_based_priority_priority_priority(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_protocol_vlan_group_index_frame_type_ethernet_snap_llc_other_frame_type(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *frame_type_ptr);
cparser_result_t cparser_cmd_vlan_set_protocol_vlan_port_ports_all_group_index_state_enable_disable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_vlan_set_protocol_vlan_port_ports_all_group_index_vid_vid_priority_priority(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_pvid_port_ports_all_vlan_index_vidx(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vidx_ptr);
cparser_result_t cparser_cmd_vlan_set_pvid_port_ports_all_pvid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *pvid_ptr);
cparser_result_t cparser_cmd_vlan_set_ext_pvid_port_ports_vlan_index_vidx(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vidx_ptr);
cparser_result_t cparser_cmd_vlan_set_tag_mode_port_ports_all_original_keep_format_priority_tag(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_fid_msti_fid_msti(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *fid_msti_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_hash_mode_ivl_svl(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_member_ports_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_tag_member_ports_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_untag_member_ports_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_ext_member_ext_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_vlan_based_policing_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_meter_meter(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *meter_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_vlan_based_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_vlan_set_vlan_table_vid_vid_vlan_based_priority_priority_priority(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_cfi_keep_cfi_to_0_keep_cfi(cparser_context_t *context);
cparser_result_t cparser_cmd_vlan_set_port_based_fid_port_ports_all_filter_id_fid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *fid_ptr);
cparser_result_t cparser_cmd_vlan_set_port_based_fid_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_vlan_set_port_based_pri_port_ports_all_priority_priority(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_vlan_set_leaky_ip_mcast_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_init(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_del_all_include_static(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_del_ip_mcast_dip_dip(cparser_context_t *context,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_del_ip_mcast_sip_sip_dip_dip(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_del_ip_mcast_vid_vid_dip_dip(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_del_mac_mcast_filter_id_fid_mac_address_mac(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_del_mac_mcast_vid_vid_mac_address_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_del_mac_ucast_vid_vid_mac_address_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_del_mac_ucast_filter_id_fid_mac_address_mac(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_port_none(cparser_context_t *context,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_port_ports_all(cparser_context_t *context,
    uint32_t *dip_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_port_ports_all_l3_interface_index(cparser_context_t *context,
    uint32_t *dip_ptr,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_priority_priority(cparser_context_t *context,
    uint32_t *dip_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_ext_ext_all_none(cparser_context_t *context,
    uint32_t *dip_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_l3routing_state_disable_enable(cparser_context_t *context,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_dip_dip_forcedl3routing_state_disable_enable(cparser_context_t *context,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_sip_sip_dip_dip_port_ports_all_none(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_sip_sip_dip_dip_priority_priority(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_sip_sip_dip_dip_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_sip_sip_dip_dip_ext_ext_all_none(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_port_ports_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_priority_priority(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_add_ip_mcast_vid_vid_dip_dip_ext_ext_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_filter_id_fid_mac_address_mac_port_ports_all_none(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_filter_id_fid_mac_address_mac_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_filter_id_fid_mac_address_mac_priority_priority(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_filter_id_fid_mac_address_mac_ext_ext_all_none(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_vid_vid_mac_address_mac_port_ports_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_vid_vid_mac_address_mac_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_vid_vid_mac_address_mac_priority_priority(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_mcast_vid_vid_mac_address_mac_ext_ext_all_none(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    char **ext_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_spn_port(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_filter_id_fid(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *fid_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_age_age(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *age_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_priority_priority(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_sa_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_arp_usage_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_auth_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_da_block_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_sa_block_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_static_state_disable_enable(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_vid_vid_mac_address_mac_ext_spn_port(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_spn_port(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_vid_vid(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_age_age(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *age_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_priority_priority(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_sa_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_arp_usage_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_auth_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_da_block_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_sa_block_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_static_state_disable_enable(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_add_mac_ucast_filter_id_fid_mac_address_mac_ext_spn_port(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_dip_dip(cparser_context_t *context,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_sip_sip_dip_dip(cparser_context_t *context,
    uint32_t *sip_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_vid_vid_dip_dip(cparser_context_t *context,
    uint32_t *vid_ptr,
    uint32_t *dip_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_mcast_filter_id_fid_mac_address_mac(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_mcast_vid_vid_mac_address_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_ucast_filter_id_fid_mac_address_mac_enhanced_filter_id_efid(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *efid_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_ucast_filter_id_fid_mac_address_mac(cparser_context_t *context,
    uint32_t *fid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_ucast_vid_vid_mac_address_mac_enhanced_filter_id_efid(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr,
    uint32_t *efid_ptr);
cparser_result_t cparser_cmd_l2_table_get_mac_ucast_vid_vid_mac_address_mac(cparser_context_t *context,
    uint32_t *vid_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l2_table_get_aging_out_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_aging_time(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_cam_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_limit_learning_action(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_limit_learning_count(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_limit_learning_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_limit_learning_port_ports_all_count(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_learning_count(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_learning_count_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_link_down_flush_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_lookup_miss_multicast_trap_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_lookup_miss_broadcast_unicast_multicast_flood_ports(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_lookup_miss_port_ports_all_multicast_ip_mcast_ip6_mcast_unicast_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_get_port_move_unknown_sa_port_ports_all_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_ip_mcast_data_port_ports_all_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_get_entry_address_address(cparser_context_t *context,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_l2_table_get_next_entry_address_address(cparser_context_t *context,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_l2_table_get_next_entry_mac_ucast_address_address(cparser_context_t *context,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_l2_table_get_next_entry_mac_ucast_address_address_spn_port(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_l2_table_get_next_entry_l2_mcast_address_address(cparser_context_t *context,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_l2_table_get_next_entry_ip_mcast_address_address(cparser_context_t *context,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_l2_table_get_next_entry_l2_ip_mcast_address_address(cparser_context_t *context,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_l2_table_get_src_port_egress_filter_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_mac_ucast_enhanced_filter_id_efid(cparser_context_t *context,
    uint32_t *efid_ptr);
cparser_result_t cparser_cmd_l2_table_set_aging_out_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_aging_time_time(cparser_context_t *context,
    uint32_t *time_ptr);
cparser_result_t cparser_cmd_l2_table_set_cam_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_count_count(cparser_context_t *context,
    uint32_t *count_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_count_unlimited(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_port_ports_all_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_port_ports_all_count_count(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *count_ptr);
cparser_result_t cparser_cmd_l2_table_set_limit_learning_port_ports_all_count_unlimited(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_link_down_flush_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_multicast_trap_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_broadcast_unicast_multicast_flood_ports_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_port_ports_all_ip_mcast_ip6_mcast_action_drop_flood_in_vlan_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_port_ports_all_multicast_action_drop_drop_exclude_rma_flood_in_vlan_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_lookup_miss_port_ports_all_unicast_action_drop_flood_in_vlan_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_ip_mcast_mode_dip_and_sip_dip_and_vid_vid_and_mac(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_port_move_unknown_sa_port_ports_all_action_copy_to_cpu_drop_forward_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_include_static(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_static_only(cparser_context_t *context);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_filter_id_fid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *fid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_filter_id_fid_include_static(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *fid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_filter_id_fid_static_only(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *fid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_vid_vid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_vid_vid_include_static(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_vid_vid_static_only(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_include_static(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_flush_mac_ucast_port_ports_all_static_only(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_ip_mcast_data_port_ports_all_action_forward_drop(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l2_table_set_src_port_egress_filter_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_igmp_get_ip_mcast_lookup_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_igmp_get_ip_mcast_table_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_igmp_get_igmpv1_igmpv2_igmpv3_mldv1_mldv2_port_ports_all_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_igmp_get_igmp_mld_vlan_leaky_isolation_leaky_state(cparser_context_t *context);
cparser_result_t cparser_cmd_igmp_get_igmp_mld_checksum_error_action(cparser_context_t *context);
cparser_result_t cparser_cmd_igmp_set_ip_mcast_lookup_mode_dip_and_sip_dip_only(cparser_context_t *context);
cparser_result_t cparser_cmd_igmp_set_ip_mcast_table_index_index_group_ip_dip_port_ports_all_none(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *dip_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_igmp_set_igmpv1_igmpv2_igmpv3_mldv1_mldv2_port_ports_all_action_drop_forward_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_igmp_set_igmp_mld_vlan_leaky_isolation_leaky_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_igmp_set_igmp_mld_checksum_error_action_drop_trap_to_cpu_forward(cparser_context_t *context);
cparser_result_t cparser_cmd_port_init(cparser_context_t *context);
cparser_result_t cparser_cmd_port_dump_isolation(cparser_context_t *context);
cparser_result_t cparser_cmd_port_get_auto_nego_port_ports_all_ability(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_auto_nego_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_status_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_enhanced_fid_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_force_dmp_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_force_dmp(cparser_context_t *context);
cparser_result_t cparser_cmd_port_get_isolation_ext_ext(cparser_context_t *context,
    char **ext_ptr);
cparser_result_t cparser_cmd_port_get_isolation_ext_ext_mode0_mode1(cparser_context_t *context,
    char **ext_ptr);
cparser_result_t cparser_cmd_port_get_isolation_ext_l34_ext(cparser_context_t *context,
    char **ext_ptr);
cparser_result_t cparser_cmd_port_get_isolation_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_isolation_port_ports_all_mode0_mode1(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_isolation_port_l34_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_isolation_ctag(cparser_context_t *context);
cparser_result_t cparser_cmd_port_get_isolation_l34(cparser_context_t *context);
cparser_result_t cparser_cmd_port_get_isolation_leaky_ip_mcast_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_master_slave_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_phy_reg_port_ports_all_page_page_register_register(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *page_ptr,
    uint32_t *register_ptr);
cparser_result_t cparser_cmd_port_get_mac_force_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_rtct_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_special_congest_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_special_congest_ports_all_indicator(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_get_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_enhanced_fid_port_ports_all_enhanced_fid_efid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *efid_ptr);
cparser_result_t cparser_cmd_port_set_force_dmp_port_ports_all_port_mask_port_mask_all(cparser_context_t *context,
    char **ports_ptr,
    char **port_mask_ptr);
cparser_result_t cparser_cmd_port_set_force_dmp_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_port_set_isolation_ext_ext_vlan_index_vidx(cparser_context_t *context,
    char **ext_ptr,
    uint32_t *vidx_ptr);
cparser_result_t cparser_cmd_port_set_isolation_ext_ext_mode0_mode1_egress_port_egressports_none(cparser_context_t *context,
    char **ext_ptr,
    char **egressports_ptr);
cparser_result_t cparser_cmd_port_set_isolation_ext_ext_mode0_mode1_egress_ext_egress_ext_none(cparser_context_t *context,
    char **ext_ptr,
    char **egress_ext_ptr);
cparser_result_t cparser_cmd_port_set_isolation_ext_ext_mode0_mode1_cpu_exclude_include(cparser_context_t *context,
    char **ext_ptr);
cparser_result_t cparser_cmd_port_set_isolation_ext_l34_ext_vlan_index_vidx(cparser_context_t *context,
    char **ext_ptr,
    uint32_t *vidx_ptr);
cparser_result_t cparser_cmd_port_set_isolation_port_ports_all_vlan_index_vidx(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vidx_ptr);
cparser_result_t cparser_cmd_port_set_isolation_port_ports_all_mode0_mode1_egress_port_egressports_none(cparser_context_t *context,
    char **ports_ptr,
    char **egressports_ptr);
cparser_result_t cparser_cmd_port_set_isolation_port_ports_all_mode0_mode1_egress_ext_egress_ext_none(cparser_context_t *context,
    char **ports_ptr,
    char **egress_ext_ptr);
cparser_result_t cparser_cmd_port_set_isolation_port_ports_all_mode0_mode1_cpu_exclude_include(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_isolation_port_l34_ports_all_vlan_index_vidx(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *vidx_ptr);
cparser_result_t cparser_cmd_port_set_isolation_ctag_mode0_mode1(cparser_context_t *context);
cparser_result_t cparser_cmd_port_set_isolation_l34_mode0_mode1(cparser_context_t *context);
cparser_result_t cparser_cmd_port_set_isolation_leaky_ip_mcast_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_master_slave_port_ports_all_auto_master_slave(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_phy_reg_port_ports_all_page_page_register_register_data_data(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *page_ptr,
    uint32_t *register_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_port_set_auto_nego_port_ports_all_ability_10h_10f_100h_100f_1000f_flow_control_asy_flow_control(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_auto_nego_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_mac_force_port_ports_all_ability_10h_10f_100h_100f_1000f_flow_control_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_mac_force_port_ports_all_lpi_100M_lpi_giga_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_mac_force_port_ports_all_link_state_link_down_link_up(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_mac_force_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_rtct_ports_all_start(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_set_special_congest_ports_all_sustain_timer_second(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *second_ptr);
cparser_result_t cparser_cmd_port_set_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_port_clear_special_congest_ports_all_indicator(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mirror_init(cparser_context_t *context);
cparser_result_t cparser_cmd_mirror_dump(cparser_context_t *context);
cparser_result_t cparser_cmd_mirror_set_egress_mode_all_pkt_mirrored_only(cparser_context_t *context);
cparser_result_t cparser_cmd_mirror_set_mirroring_port_port_mirrored_port_ports_none_rx_mirror_tx_mirror(cparser_context_t *context,
    uint32_t *port_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_mirror_get_egress_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_reset_table_l3_pppoe_nexthop_interface_external_ip_arp_naptr_napt(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_reset_arp_traffic_indicator_table0_table1(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_reset_l4_traffic_indicator_table0_table1(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_arp(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_arp_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_external_ip(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_external_ip_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_routing(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_routing_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_netif(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_netif_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_nexthop(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_nexthop_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_pppoe(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_pppoe_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_napt(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_napt_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_naptr(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_naptr_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_l34_get_ext_ext_all(cparser_context_t *context,
    char **ext_ptr);
cparser_result_t cparser_cmd_l34_get_l4_fragment(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_l3_checksum_error(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_l4_checksum_error(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_ttl_minus_state(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_interface_decision_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_nat_attack(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_wan_route(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_route_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_pppoe_traffic_indicator(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_arp_traffic_indicator_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_arp_traffic_indicator(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_get_l4_traffic_indicator_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_get_l4_traffic_indicator(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_arp_index_next_hop_table_nh_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *nh_index_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_type_nat_napt_lp(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_external_ip_ip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_internal_ip_ip(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_next_hop_table_nh_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *nh_index_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_nat_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_nat_priority_priority(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l34_set_external_ip_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_ip_ip_ip_mask_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_interface_type_internal_external(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_drop_trap(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_local_route_destination_netif_netif_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *netif_index_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_local_route_arp_start_address_start_addr_arp_end_address_end_addr(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *start_addr_ptr,
    uint32_t *end_addr_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_global_route_next_hop_table_nh_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *nh_index_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_global_route_next_hop_start_address_next_hop_number_nh_number(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *address_ptr,
    uint32_t *nh_number_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_global_route_next_hop_algo_per_packet_per_session_per_source_ip(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_type_global_route_ip_domain_range_range(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *range_ptr);
cparser_result_t cparser_cmd_l34_set_routing_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_gateway_mac_mac_mac_mask_no_mask_1bit_mask_2bit_mask_3bit_mask(cparser_context_t *context,
    uint32_t *index_ptr,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_vid_vid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_mtu_mtu(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *mtu_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_netif_index_l3_route_state_enable_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_nexthop_index_netif_netif_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *netif_index_ptr);
cparser_result_t cparser_cmd_l34_set_nexthop_index_l2_l2_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *l2_index_ptr);
cparser_result_t cparser_cmd_l34_set_nexthop_index_type_ethernet_pppoe(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_nexthop_index_pppoe_pppoe_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *pppoe_index_ptr);
cparser_result_t cparser_cmd_l34_set_pppoe_index_session_id_session_id(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *session_id_ptr);
cparser_result_t cparser_cmd_l34_set_napt_index_hash_index_hash_index(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *hash_index_ptr);
cparser_result_t cparser_cmd_l34_set_napt_index_napt_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_napt_index_napt_priority_priority(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l34_set_napt_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_internal_ip_ip_internal_port_port(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *ip_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_protocol_tcp_udp(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_external_ip_extip_index_external_port_lsb_export_lsb(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *extip_index_ptr,
    uint32_t *export_lsb_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_naptr_priority_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_naptr_priority_priority(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_remote_hash_type_none_remote_ip_remote_ip_remote_port(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_hash_value_value(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_l34_set_naptr_index_state_disable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_port_ports_all_netif_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_ext_ext_all_netif_index(cparser_context_t *context,
    char **ext_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_set_l4_fragment_action_trap_to_cpu_forward(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_l3_checksum_error_action_forward_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_l4_checksum_error_action_forward_drop(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_ttl_minus_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_interface_decision_mode_vlan_based_port_based_mac_based(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_nat_attack_action_drop_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_wan_route_action_drop_trap_to_cpu_forward(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_set_route_mode_l3_l3_l4_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_del_arp_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_del_external_ip_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_del_routing_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_del_netif_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_del_napt_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_del_naptr_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_l34_select_arp_traffic_indicator_table0_table1(cparser_context_t *context);
cparser_result_t cparser_cmd_l34_select_l4_traffic_indicator_table0_table1(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_l34_set_hsb_l2_bridge_l2bridge(cparser_context_t *context,
    uint32_t *l2bridge_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_ip_fragments_is_fragments(cparser_context_t *context,
    uint32_t *is_fragments_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_ip_more_fragments_is_more(cparser_context_t *context,
    uint32_t *is_more_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_l4_checksum_ok_is_ok(cparser_context_t *context,
    uint32_t *is_ok_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_l3_checksum_ok_is_ok(cparser_context_t *context,
    uint32_t *is_ok_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_direct_tx_is_direct_tx(cparser_context_t *context,
    uint32_t *is_direct_tx_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_udp_no_chksum_udp_no_chk(cparser_context_t *context,
    uint32_t *udp_no_chk_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_parse_fail_parse_fail(cparser_context_t *context,
    uint32_t *parse_fail_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_pppoe_if_pppoe_if(cparser_context_t *context,
    uint32_t *pppoe_if_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_svlan_if_svlan_if(cparser_context_t *context,
    uint32_t *svlan_if_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_ttls_ttls(cparser_context_t *context,
    uint32_t *ttls_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_pkt_type_pkt_type(cparser_context_t *context,
    uint32_t *pkt_type_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_tcp_flag_tcp_flag(cparser_context_t *context,
    uint32_t *tcp_flag_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_cvlan_if_cvlan_if(cparser_context_t *context,
    uint32_t *cvlan_if_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_source_port_spa(cparser_context_t *context,
    uint32_t *spa_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_cvid_cvid(cparser_context_t *context,
    uint32_t *cvid_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_packet_length_length(cparser_context_t *context,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_dport_dport(cparser_context_t *context,
    uint32_t *dport_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_pppoe_id_pppoe(cparser_context_t *context,
    uint32_t *pppoe_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_dip_ip(cparser_context_t *context,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_sip_ip(cparser_context_t *context,
    uint32_t *ip_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_sport_sport(cparser_context_t *context,
    uint32_t *sport_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsb_dmac_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_debug_l34_set_hsba_log_mode_mode(cparser_context_t *context,
    uint32_t *mode_ptr);
cparser_result_t cparser_cmd_debug_l34_get_hsb(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_l34_get_hsa(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_l34_get_hsba_log_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_batch_a_loop(cparser_context_t *context,
    uint32_t *loop_ptr);
cparser_result_t cparser_cmd_debug_batch_A_loop(cparser_context_t *context,
    uint32_t *loop_ptr);
cparser_result_t cparser_cmd_debug_batch_w_reg_msb_lsb_data(cparser_context_t *context,
    uint32_t *reg_ptr,
    uint32_t *msb_ptr,
    uint32_t *lsb_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_debug_batch_W_reg_msb_lsb_data(cparser_context_t *context,
    uint32_t *reg_ptr,
    uint32_t *msb_ptr,
    uint32_t *lsb_ptr,
    uint32_t *data_ptr);
cparser_result_t cparser_cmd_debug_batch_r_reg_msb_lsb(cparser_context_t *context,
    uint32_t *reg_ptr,
    uint32_t *msb_ptr,
    uint32_t *lsb_ptr);
cparser_result_t cparser_cmd_debug_batch_R_reg_msb_lsb(cparser_context_t *context,
    uint32_t *reg_ptr,
    uint32_t *msb_ptr,
    uint32_t *lsb_ptr);
cparser_result_t cparser_cmd_debug_batch_phy_phyid(cparser_context_t *context,
    uint32_t *phyid_ptr);
cparser_result_t cparser_cmd_debug_batch_list(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_batch_execute_debug(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_dump_hsa_hsb_hsd(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_dump_hsd_port_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_debug_dump_hsd_latest(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_log(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_memory_address_words(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *words_ptr);
cparser_result_t cparser_cmd_debug_get_soc_memory_address_words(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *words_ptr);
cparser_result_t cparser_cmd_debug_get_table_table_idx_address(cparser_context_t *context,
    uint32_t *table_idx_ptr,
    uint32_t *address_ptr);
cparser_result_t cparser_cmd_debug_get_phy_phy_id_reg_address(cparser_context_t *context,
    uint32_t *phy_id_ptr,
    uint32_t *reg_address_ptr);
cparser_result_t cparser_cmd_debug_get_version_detail(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_hsb_latch_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_get_bond_chip_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_log_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_log_level_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_set_log_level_mask_bitmask(cparser_context_t *context,
    uint32_t *bitmask_ptr);
cparser_result_t cparser_cmd_debug_set_log_level_type_level_level_mask(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_log_format_normal_detail(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_log_module_bitmask(cparser_context_t *context,
    uint64_t *bitmask_ptr);
cparser_result_t cparser_cmd_debug_set_memory_address_value(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_set_soc_memory_address_value(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_set_phy_phy_id_reg_address_value(cparser_context_t *context,
    uint32_t *phy_id_ptr,
    uint32_t *reg_address_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_set_register_dump_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_wrap_gphy_dbgo_sys_gen_dbgo_ctrlckt_dbgo_misc_dbg_rrcp_o_dbg_rldp_o(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbg_led_o_dbg_rtct_o_dbg_mib_o_dbg_phy_sts_o_dbg_intrpt_o_dbg_afbk_o_dbg_diag_o_dbgo_hwpkt_dbgo_efuse(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_wrap_sds_dbgo_chip_clk_gen_0_dbgo_chip_clk_gen_1_dbgo_chip_clk_gen_2_dbgo_chip_rst_gen(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_chip_misc_dbgo_cfgif_dbgo_soc_dbgo_ssc_dbgo_pll_root_dbgo_ponctrl_dbgo_clkctrl(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_rstgen_dbgo_clkgen_dbgo_sw_lxslv_PLLTOUT(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_regctrl(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_regctrl_dbgo_swarb_dbgo_gphyarb_dbgo_smimst_dbgo_iicmst_dbgo_iicmst_1_bits_3_0_bits_3_0(cparser_context_t *context,
    uint32_t *bits_3_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_fctrl(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_fctrl_dbgo_ingress_dbgo_egress_bits_3_0_bits_3_0(cparser_context_t *context,
    uint32_t *bits_3_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_swcore_cen(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_swcore_cen_dbgo_sel_sch_dbgo_sel_outq_dbgo_sel_mtr_dbgo_sel_hsactrl_dbgo_sel_inq_dbgo_sel_out_drp_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_swcore_cen_dbgo_sel_sch_pon_dbg_dpm_o_dbg_l2_o_dbg_acl_o_dbg_misc_o_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p0_dbgo_tx_p0_dbgo_rx_p0_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p1_dbgo_tx_p1_dbgo_rx_p1_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p2_dbgo_tx_p2_dbgo_rx_p2_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p3_dbgo_tx_p3_dbgo_rx_p3_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p4_dbgo_tx_p4_dbgo_rx_p4_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p5_dbgo_tx_p5_dbgo_rx_p5_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_dbgo_mac_p6_dbgo_tx_p6_dbgo_rx_p6_dbgo_eee_bits_7_0_bits_7_0(cparser_context_t *context,
    uint32_t *bits_7_0_ptr);
cparser_result_t cparser_cmd_debug_set_hsb_latch_mode_all_none_first_drop_first_pass_first_trap_drop_trap_acl(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_rtk_init(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_fpga_init(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_register_rw_test_register_address_data_value_count_count(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *value_ptr,
    uint32_t *count_ptr);
cparser_result_t cparser_cmd_debug_test_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_debug_packet_rx_dump_byte(cparser_context_t *context,
    uint32_t *byte_ptr);
cparser_result_t cparser_cmd_debug_packet_rx_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_rx_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_pkt_pos_data(cparser_context_t *context,
    uint32_t *pos_ptr,
    char **data_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_addr_da_sa(cparser_context_t *context,
    cparser_macaddr_t *da_ptr,
    cparser_macaddr_t *sa_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_l2payload_pos_payload(cparser_context_t *context,
    uint32_t *pos_ptr,
    char **payload_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_padding_start_end_pkt_len(cparser_context_t *context,
    uint32_t *start_ptr,
    uint32_t *end_ptr,
    uint32_t *pkt_len_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_l3cs_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_l4cs_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_keep_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_learning_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_l2br_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_l34keep_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_efid_enable_disable_efid(cparser_context_t *context,
    uint32_t *efid_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_prisel_enable_disable_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_vsel_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_txmask_vidx_value(cparser_context_t *context,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_psel_enable_disable_streamid(cparser_context_t *context,
    uint32_t *streamid_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_pppoeact_intact_addhdr_removehdr_remarking_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_extspa_port(cparser_context_t *context,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_set_cputag_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_get_preview_length(cparser_context_t *context,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_debug_packet_tx_get_cputag(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_packet_tx_send(cparser_context_t *context);
cparser_result_t cparser_cmd_debug_classf_get_hit_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_init(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_priority_selector(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_priority_to_queue_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_priority_to_queue(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_priority_to_queue_table_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_qos_get_remarking_port_ports_all_dscp_source(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_remarking_dscp_source_internal_priority_dscp(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remarking_dot1p_dscp_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_remarking_dot1p(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_dot1p(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_dscp(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_forward_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_remapping_forward_to_cpu_internal_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_get_remapping_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_avb_remapping(cparser_context_t *context);
cparser_result_t cparser_cmd_qos_get_avb_remapping_internal_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_get_avb_remapping_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_get_scheduling_algorithm_port_ports_all_queue_id_qid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_qos_get_scheduling_queue_weight_port_ports_all_queue_id_qid(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_port_weight(cparser_context_t *context,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_dot1q_weight(cparser_context_t *context,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_dscp_weight(cparser_context_t *context,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_acl_weight(cparser_context_t *context,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_lookup_table_weight(cparser_context_t *context,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_smac_weight(cparser_context_t *context,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_svlan_weight(cparser_context_t *context,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_vlan_weight(cparser_context_t *context,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_selector_l4_weight(cparser_context_t *context,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_qos_set_priority_to_queue_port_ports_all_table_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_qos_set_priority_to_queue_table_index_priority_priority_queue_id_qid(cparser_context_t *context,
    uint32_t *index_ptr,
    char **priority_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_port_ports_all_dscp_source_internal_priority_dscp(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_inter_priority_priority_dscp_dscp(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *dscp_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dscp_original_dscp_dscp_remarking_dscp_remarking_dscp(cparser_context_t *context,
    char **dscp_ptr,
    uint32_t *remarking_dscp_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dot1p_dscp_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_remarking_dot1p_inter_priority_priority_dot1p_priority_dot1p_priority(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *dot1p_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_dot1p_dot1p_priority_dot1p_priority_internal_priority_internal_priority(cparser_context_t *context,
    uint32_t *dot1p_priority_ptr,
    uint32_t *internal_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_dscp_dscp_dscp_internal_priority_priority(cparser_context_t *context,
    char **dscp_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_forward_to_cpu_internal_priority_priority_remapping_priority_remapping_priority(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *remapping_priority_ptr);
cparser_result_t cparser_cmd_qos_set_remapping_port_ports_all_internal_priority_priority(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_qos_set_avb_remapping_internal_priority_priority_user_priority_user_priority(cparser_context_t *context,
    uint32_t *priority_ptr,
    uint32_t *user_priority_ptr);
cparser_result_t cparser_cmd_qos_set_avb_remapping_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_qos_set_scheduling_algorithm_port_ports_all_queue_id_qid_strict_wfq(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_qos_set_scheduling_queue_weight_port_ports_all_queue_id_qid_weight_weight(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_bandwidth_init(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_egress_ifg(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_egress_ifg_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_get_egress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_get_egress_port_ports_all_queue_id_qid_all(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_bandwidth_get_ingress_bypass_packet_state(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_ingress_flow_control_high_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_ingress_flow_control_low_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_get_ingress_flow_control_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_get_ingress_ifg_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_get_ingress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_ifg_exclude_include(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_set_egress_ifg_port_ports_all_exclude_include(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_port_ports_all_queue_id_qid_apr_index_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_port_ports_all_queue_id_qid_share_bandwidth_state_disable_enable(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_bandwidth_set_egress_port_ports_all_rate_rate(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_bypass_packet_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_bandwidth_set_ingress_flow_control_high_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_flow_control_low_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_flow_control_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_ifg_port_ports_all_exclude_include(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_bandwidth_set_ingress_port_ports_all_rate_rate(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_meter_init(cparser_context_t *context);
cparser_result_t cparser_cmd_meter_get_entry_index(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_get_entry_index_burst_size(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_get_entry_index_ifg(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_get_entry_index_meter_exceed(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_get_entry_index_rate(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_get_tick_token(cparser_context_t *context);
cparser_result_t cparser_cmd_meter_get_pon_tick_token(cparser_context_t *context);
cparser_result_t cparser_cmd_meter_set_entry_index_burst_size_size(cparser_context_t *context,
    char **index_ptr,
    uint32_t *size_ptr);
cparser_result_t cparser_cmd_meter_set_entry_index_ifg_exclude_include(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_meter_set_entry_index_rate_rate(cparser_context_t *context,
    char **index_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_meter_set_tick_token_tick_period_period_token_token(cparser_context_t *context,
    uint32_t *period_ptr,
    uint32_t *token_ptr);
cparser_result_t cparser_cmd_meter_set_pon_tick_token_tick_period_period_token_token(cparser_context_t *context,
    uint32_t *period_ptr,
    uint32_t *token_ptr);
cparser_result_t cparser_cmd_meter_reset_entry_index_meter_exceed(cparser_context_t *context,
    char **index_ptr);
cparser_result_t cparser_cmd_storm_control_get_broadcast_multicast_unknown_multicast_unknown_unicast_alternated(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_get_broadcast_multicast_unknown_multicast_unknown_unicast_arp_storm_dhcp_storm_igmp_mld_storm(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_get_broadcast_multicast_unknown_multicast_unknown_unicast_arp_storm_dhcp_storm_igmp_mld_storm_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_storm_control_get_bypass_packet_igmp_cdp_csstp_state(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_get_bypass_packet_rma_rma_tail_state(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_storm_control_set_broadcast_multicast_unknown_multicast_unknown_unicast_alternated_disabled_arp_storm_dhcp_storm_igmp_mld_storm(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_set_broadcast_multicast_unknown_multicast_unknown_unicast_arp_storm_dhcp_storm_igmp_mld_storm_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_set_broadcast_multicast_unknown_multicast_unknown_unicast_arp_storm_dhcp_storm_igmp_mld_storm_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_storm_control_set_broadcast_multicast_unknown_multicast_unknown_unicast_arp_storm_dhcp_storm_igmp_mld_storm_port_ports_all_meter_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_storm_control_set_bypass_packet_igmp_cdp_csstp_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_storm_control_set_bypass_packet_rma_rma_tail_state_disable_enable(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_switch_init(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_48_pass_1_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_ipg_compensation_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_ipg_compensation(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_bypass_tx_crc_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_rx_check_crc_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_mac_address(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_max_pkt_len_fe_ge_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_max_pkt_len_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_switch_get_limit_pause_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_small_ipg_tag_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_back_pressure(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_get_small_pkt_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_output_drop_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_get_output_drop_broadcast_unknown_unicast_multicast_state(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_48_pass_1_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_ipg_compensation_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_ipg_compensation_65ppm_90ppm(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_bypass_tx_crc_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_rx_check_crc_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_set_mac_address_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_switch_set_max_pkt_len_fe_ge_port_ports_all_index_index(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_switch_set_max_pkt_len_index_index_length_len(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *len_ptr);
cparser_result_t cparser_cmd_switch_set_limit_pause_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_small_ipg_tag_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_set_back_pressure_jam_defer(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_set_small_pkt_port_ports_all_state_enable_disable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_set_output_drop_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_switch_set_output_drop_broadcast_unknown_unicast_multicast_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_switch_reset_global_chip(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_init(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_get_guest_vlan(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_get_mac_based_direction(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_get_mac_based_port_ports_all_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_get_port_based_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_get_trap_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_get_unauth_packet_port_ports_all_action(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_set_guest_vlan_to_auth_da_allow_disallow(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_set_guest_vlan_vid_vid(cparser_context_t *context,
    uint32_t *vid_ptr);
cparser_result_t cparser_cmd_dot1x_set_mac_based_direction_both_in(cparser_context_t *context);
cparser_result_t cparser_cmd_dot1x_set_mac_based_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_set_port_based_port_ports_all_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_set_port_based_port_ports_all_auth_unauth(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_set_port_based_port_ports_all_direction_both_in(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_dot1x_set_trap_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_dot1x_set_unauth_packet_port_ports_all_action_drop_guest_vlan_trap_to_cpu(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_stp_init(cparser_context_t *context);
cparser_result_t cparser_cmd_stp_get_stp_table_instance_instance_port_ports_all_state(cparser_context_t *context,
    uint32_t *instance_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_stp_set_stp_table_instance_instance_port_ports_all_state_blocking_disable_forwarding_learning(cparser_context_t *context,
    uint32_t *instance_ptr,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_init(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_dump_counter_dot1dTpLearnedEntryDiscards(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all_dot1dTpPortInDiscards_dot3ControlInUnknownOpcodes_dot3InPauseFrames_dot3OutPauseFrames_dot3StatsDeferredTransmissions_dot3StatsExcessiveCollisions_dot3StatsLateCollisions_dot3StatsMultipleCollisionFrames_dot3StatsSingleCollisionFrames_dot3StatsSymbolErrors(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all_etherStatsCRCAlignErrors_etherStatsCollisions_etherStatsDropEvents_etherStatsFragments_etherStatsJabbers_etherStatsUndersizeDropPkts(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all_etherStatsPkts64Octets_etherStatsPkts65to127Octets_etherStatsPkts128to255Octets_etherStatsPkts256to511Octets_etherStatsPkts512to1023Octets_etherStatsPkts1024to1518Octets_etherStatsPkts1519toMaxOctets_etherStatsOversizePkts_etherStatsUndersizePkts_rx_tx(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all_etherStatsTxBroadcastPkts_etherStatsTxMulticastPkts_inOamPduPkts_outOamPduPkts(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_counter_port_ports_all_ifInOctets_ifInUcastPkts_ifInMulticastPkts_ifInBroadcastPkts_ifOutOctets_ifOutUcastPkts_ifOutMulticastPkts_ifOutBroadcastPkts_ifOutDiscards(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_dump_log_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_get_count_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_get_ctag_length_rx_counter_tx_counter(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_get_reset_value(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_get_sync_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_get_log_mode_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_get_log_type_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_set_count_mode_by_timer_latch_time_timer(cparser_context_t *context,
    uint32_t *timer_ptr);
cparser_result_t cparser_cmd_mib_set_count_mode_freerun(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_set_ctag_length_rx_counter_tx_counter_exclude_include(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_set_reset_value_0_1(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_set_sync_mode_freerun_stop(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_set_log_mode_index_index_bits_32_bits_64(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_set_log_type_index_index_byte_count_packet_count(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_mib_packet_debug_reason_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_reset_counter_global(cparser_context_t *context);
cparser_result_t cparser_cmd_mib_reset_counter_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_mib_reset_log_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_trunk_init(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_dump(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_distribute_algorithm(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_queue_empty(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_flow_control_state(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_hash_mapping_hash_value_all(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_member_port(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_get_traffic_separation_flooding_state(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_distribute_algorithm_dst_ip_dst_l4_port_dst_mac_src_ip_src_l4_port_src_mac_src_port(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_flow_control_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_hash_mapping_hash_value_value_port_port(cparser_context_t *context,
    uint32_t *value_ptr,
    uint32_t *port_ptr);
cparser_result_t cparser_cmd_trunk_set_member_port_ports_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_trunk_set_mode_dumb_normal(cparser_context_t *context);
cparser_result_t cparser_cmd_trunk_set_traffic_separation_flooding_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_rma_dump(cparser_context_t *context);
cparser_result_t cparser_cmd_rma_set_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_rma_set_address_rma_tail_action_drop_forward_forward_exclude_cpu_trap_to_cpu(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_rma_set_address_rma_tail_vlan_leaky_isolation_leaky_keep_vlan_format_bypass_storm_control_state_disable_enable(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_rma_get_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_rma_get_address_rma_tail_action(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_rma_get_address_rma_tail_vlan_leaky_isolation_leaky_keep_vlan_format_bypass_storm_control_state(cparser_context_t *context,
    uint32_t *rma_tail_ptr);
cparser_result_t cparser_cmd_trap_init(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_cdp_csstp_action_drop_forward_forward_exclude_cpu_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_set_cdp_csstp_vlan_leaky_isolation_leaky_keep_vlan_format_bypass_storm_control_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_cdp_csstp_action(cparser_context_t *context);
cparser_result_t cparser_cmd_trap_get_cdp_csstp_vlan_leaky_isolation_leaky_keep_vlan_format_bypass_storm_control(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_init(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_dump(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_get_state(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_get_multiplexer_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_oam_get_parser_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_oam_get_trap_priority(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_set_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_oam_set_multiplexer_port_ports_all_action_forward_discard_from_cpu_only(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_oam_set_parser_port_port_all_action_forward_loopback_discard(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_oam_set_trap_priority_priority(cparser_context_t *context,
    uint32_t *priority_ptr);
cparser_result_t cparser_cmd_security_init(cparser_context_t *context);
cparser_result_t cparser_cmd_security_set_attack_prevent_port_port_all_state_disable_enable(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_security_set_attack_prevent_daeqsa_deny_land_deny_blat_deny_synfin_deny_xma_deny_nullscan_deny_tcphdr_min_check_syn_sportl1024_deny_action_forward_drop_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_security_set_attack_prevent_syn_flood_fin_flood_icmp_flood_action_forward_drop_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_security_set_attack_prevent_syn_flood_fin_flood_icmp_flood_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_security_set_attack_prevent_tcp_frag_off_min_check_icmp_frag_pkts_deny_pod_deny_udp_bomb_syn_with_data_action_forward_drop_trap_to_cpu(cparser_context_t *context);
cparser_result_t cparser_cmd_security_get_attack_prevent_port_port_all_state(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_security_get_attack_prevent_daeqsa_deny_land_deny_blat_deny_synfin_deny_xma_deny_nullscan_deny_tcphdr_min_check_syn_sportl1024_deny_action(cparser_context_t *context);
cparser_result_t cparser_cmd_security_get_attack_prevent_syn_flood_fin_flood_icmp_flood_action(cparser_context_t *context);
cparser_result_t cparser_cmd_security_get_attack_prevent_syn_flood_fin_flood_icmp_flood_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_security_get_attack_prevent_tcp_frag_off_min_check_icmp_frag_pkts_deny_pod_deny_udp_bomb_syn_with_data_action(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_init(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_set_aware_port_ports_all_none(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_cpu_set_tag_format_apollo_normal(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_set_trap_insert_tag_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_get_aware_port(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_get_tag_format(cparser_context_t *context);
cparser_result_t cparser_cmd_cpu_get_trap_insert_tag_state(cparser_context_t *context);
cparser_result_t cparser_cmd_iol_set_max_length_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_iol_set_error_length_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_iol_set_16_collision_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_iol_get_max_length(cparser_context_t *context);
cparser_result_t cparser_cmd_iol_get_error_length(cparser_context_t *context);
cparser_result_t cparser_cmd_iol_get_16_collision(cparser_context_t *context);
cparser_result_t cparser_cmd_register_set_address_value(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_register_get_address_words(cparser_context_t *context,
    uint32_t *address_ptr,
    uint32_t *words_ptr);
cparser_result_t cparser_cmd_register_get_all(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_get_ignore_timeout_state(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_get_error_count(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_get_monitor_count(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_get_port_ports_error_counter(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_get_port_ports_monitor_counter(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_get_port_ports_restore(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_get_port_ports_valid_flow(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_get_port_ports_state(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_get_port_ports_current_power_level(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_get_reduce_power_level_state(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_get_timer_state(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_get_timer(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_set_ignore_timeout_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_set_error_count_1_2_4_8_16_32_64_128(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_set_monitor_count_8K_16K_32K_64K_128K_256K_512K_1M(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_set_port_ports_state_disable_enable(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_auto_fallback_set_reduce_power_level_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_set_timer_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_auto_fallback_set_timer_timer(cparser_context_t *context,
    uint32_t *timer_ptr);
cparser_result_t cparser_cmd_rldp_init(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_bypass_flow_control_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_mode_sa_moving_periodic(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_magic_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_rldp_set_compare_type_magic_and_identifier_magic_only(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_handle_hardware_software(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_re_generate_identifier(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_set_check_loop_period_time(cparser_context_t *context,
    uint32_t *time_ptr);
cparser_result_t cparser_cmd_rldp_set_check_loop_number_count(cparser_context_t *context,
    uint32_t *count_ptr);
cparser_result_t cparser_cmd_rldp_set_port_port_all_state_disable_enable(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rldp_set_port_port_all_control_state_none_looping_looping(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rldp_get_state(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_bypass_flow_control_state(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_magic(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_identifier(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_compare_type(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_handle(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_check_loop_period(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_check_loop_number(cparser_context_t *context);
cparser_result_t cparser_cmd_rldp_get_port_port_all_state(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rldp_get_port_port_all_status(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rldp_get_port_port_all_control_state(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rldp_get_port_port_all_looped_port_id(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rldp_clear_port_port_all_status_entering_leaving(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_rlpp_set_trap_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_rlpp_get_trap_state(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_init(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_set_mask_reg_all_link_change_meter_exceed_learn_over_speed_change_special_congestion_loop_detection_cable_diag_acl_gphy_serdes_gpon_epon_ptp_dying_gasp_thermal_adc_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_set_polarity_high_low(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_get_mask_reg_all_link_change_meter_exceed_learn_over_speed_change_special_congestion_loop_detection_cable_diag_acl_gphy_serdes_gpon_epon_ptp_dying_gasp_thermal_adc_state(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_get_status_reg_all_link_change_meter_exceed_learn_over_speed_change_special_congestion_loop_detection_cable_diag_acl_gphy_serdes_gpon_epon_ptp_dying_gasp_thermal_adc(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_get_status_speed_change_link_up_link_down_gphy(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_get_polarity(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_clear_status_reg_all_link_change_meter_exceed_learn_over_speed_change_special_congestion_loop_detection_cable_diag_acl_gphy_serdes_gpon_epon_ptp_dying_gasp_thermal_adc(cparser_context_t *context);
cparser_result_t cparser_cmd_interrupt_clear_status_speed_change_link_up_link_down_gphy(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_init(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_bypass_fec_state(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_llid_table_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_epon_get_llid_table(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_mpcp_gate_action(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_mpcp_invalid_len_action(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_register_mode(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_register_llid_idx(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_register_state(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_register_mac_address(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_get_register_pendding_grant(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_bypass_fec_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_llid_table_index_state_disable_enable(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_epon_set_llid_table_index_llid_llid(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *llid_ptr);
cparser_result_t cparser_cmd_epon_set_llid_table_index_report_timer_timer(cparser_context_t *context,
    uint32_t *index_ptr,
    uint32_t *timer_ptr);
cparser_result_t cparser_cmd_epon_set_mpcp_gate_action_asic_only_trap_and_asic(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_mpcp_invalid_len_action_drop_pass(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_register_mode_asic_sw(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_register_llid_idx_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_epon_set_register_state_disable_enable(cparser_context_t *context);
cparser_result_t cparser_cmd_epon_set_register_mac_address_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_epon_set_register_pendding_grant_number(cparser_context_t *context,
    uint32_t *number_ptr);
cparser_result_t cparser_cmd_pon_init(cparser_context_t *context);
cparser_result_t cparser_cmd_pon_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_pon_set_drain_out_t_cont_tcont_queue_id_qid(cparser_context_t *context,
    uint32_t *tcont_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_pon_set_stream_sid_t_cont_tcont_queue_id_qid(cparser_context_t *context,
    char **sid_ptr,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_set_stream_sid_llid_llid_queue_id_qid(cparser_context_t *context,
    char **sid_ptr,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_set_t_cont_tcont_queue_id_qid_pir_rate_rate(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_pon_set_t_cont_tcont_queue_id_qid_cir_rate_rate(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_pon_set_t_cont_tcont_queue_id_qid_scheduling_type_strict_wfq(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_set_t_cont_tcont_queue_id_qid_scheduling_weight_weight(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_pon_set_t_cont_tcont_queue_id_qid_egress_drop_state_enable_disable(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_set_llid_llid_queue_id_qid_pir_rate_rate(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_pon_set_llid_llid_queue_id_qid_cir_rate_rate(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr,
    uint32_t *rate_ptr);
cparser_result_t cparser_cmd_pon_set_llid_llid_queue_id_qid_scheduling_type_strict_wfq(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_set_llid_llid_queue_id_qid_scheduling_weight_weight(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr,
    uint32_t *weight_ptr);
cparser_result_t cparser_cmd_pon_set_llid_llid_queue_id_qid_egress_drop_state_enable_disable(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_get_drain_out_status(cparser_context_t *context);
cparser_result_t cparser_cmd_pon_get_stream_sid(cparser_context_t *context,
    char **sid_ptr);
cparser_result_t cparser_cmd_pon_get_t_cont_tcont_queue_id_qid(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_get_llid_llid_queue_id_qid(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_add_t_cont_tcont_queue_id_qid(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_add_llid_llid_queue_id_qid(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_del_t_cont_tcont_queue_id_qid(cparser_context_t *context,
    uint32_t *tcont_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_pon_del_llid_llid_queue_id_qid(cparser_context_t *context,
    uint32_t *llid_ptr,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_flowctrl_dump_threshold_switch_pon(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_dump_used_page_switch_pon(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_type_ingress_egress(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_jumbo_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_jumbo_size_3k_4k_6k_max(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_drop_all_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_pause_all_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_system_flowctrl_threshold_drop_threshold_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_port_flowctrl_threshold_drop_threshold_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_jumbo_global_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_jumbo_port_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_egress_drop_port_ports_all_threshold_threshold(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_egress_drop_port_ports_all_queue_id_qid_all_drop_enable_disable(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_egress_drop_queue_id_qid_all_threshold_threshold(cparser_context_t *context,
    char **qid_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_egress_drop_port_gap_queue_gap_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_pon_system_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_pon_port_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_pon_egress_drop_queue_id_qid_all_threshold_index_index(cparser_context_t *context,
    char **qid_ptr,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_pon_egress_drop_queue_threshold_index_index_all_threshold_threshold(cparser_context_t *context,
    char **index_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_ingress_pon_egress_drop_queue_gap_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_max_page_clear_egress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_set_max_page_clear_used_page(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_max_page_clear_egress_queue_port_ports_all_queue_id_qid_all(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_set_max_page_clear_pon_queue_id_qid(cparser_context_t *context,
    uint32_t *qid_ptr);
cparser_result_t cparser_cmd_flowctrl_set_total_pktcnt_clear(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_set_prefetch_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_low_queue_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_system_flowctrl_threshold_drop_threshold_high_off_high_on_low_off_low_on_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_queue_id_qid_all_threshold_threshold(cparser_context_t *context,
    char **qid_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_port_ports_all_threshold_threshold(cparser_context_t *context,
    char **ports_ptr,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_port_ports_all_queue_id_qid_all_queue_drop_state_enable_disable(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_port_gap_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_egress_queue_gap_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_flowctrl_set_high_queue_port_port_all_queue_mask_queue_all(cparser_context_t *context,
    char **port_ptr,
    char **queue_ptr);
cparser_result_t cparser_cmd_flowctrl_set_patch_gpon_35m_fiber_35m_20m(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_type(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_jumbo_state(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_jumbo_size(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_drop_all_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_pause_all_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_system_flowctrl_threshold_drop_threshold_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_port_flowctrl_threshold_drop_threshold_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_jumbo_global_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_jumbo_port_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_egress_drop_port_ports_all_threshold(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_egress_drop_port_ports_all_queue_id_qid_all_drop(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_egress_drop_queue_id_qid_all_threshold(cparser_context_t *context,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_egress_drop_port_gap_queue_gap_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_pon_system_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_pon_port_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_ingress_pon_egress_drop_queue_id_qid_all_threshold_index(cparser_context_t *context,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_pon_egress_drop_queue_threshold_index_idx_all_threshold(cparser_context_t *context,
    char **idx_ptr);
cparser_result_t cparser_cmd_flowctrl_get_ingress_pon_egress_drop_queue_gap_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_used_page_cnt_ingress_egress_port_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_used_page_cnt_egress_queue_port_ports_all_queue_id_qid_all(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_used_page_cnt_total_public_public_off_public_jumbo(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_used_page_cnt_packet_ports_all(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_used_page_cnt_pon_queue_id_qid_all(cparser_context_t *context,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_total_page_cnt(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_prefetch_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_low_queue_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_egress_system_flowctrl_threshold_drop_threshold_high_off_high_on_low_off_low_on_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_egress_queue_id_qid_all_threshold(cparser_context_t *context,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_egress_port_ports_all_threshold(cparser_context_t *context,
    char **ports_ptr);
cparser_result_t cparser_cmd_flowctrl_get_egress_port_ports_all_queue_id_qid_all_queue_drop_state(cparser_context_t *context,
    char **ports_ptr,
    char **qid_ptr);
cparser_result_t cparser_cmd_flowctrl_get_egress_port_gap_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_egress_queue_gap_threshold(cparser_context_t *context);
cparser_result_t cparser_cmd_flowctrl_get_high_queue_port_port_all(cparser_context_t *context,
    char **port_ptr);
cparser_result_t cparser_cmd_gpon_set_serial_number_vendor_id_serial_number(cparser_context_t *context,
    char **vendor_id_ptr,
    uint32_t *serial_number_ptr);
cparser_result_t cparser_cmd_gpon_set_password_password(cparser_context_t *context,
    char **password_ptr);
cparser_result_t cparser_cmd_gpon_set_active_timer_to1_to1_timer_to2_to2_timer(cparser_context_t *context,
    uint32_t *to1_timer_ptr,
    uint32_t *to2_timer_ptr);
cparser_result_t cparser_cmd_gpon_set_ds_laser_opt_los_cdr_los_state_enable_disable_polarity_high_low(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_ds_laser_los_holdover_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_ds_phy_descramble_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_ds_phy_fec_state_enable_disable_fec_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_gpon_set_ds_ploam_drop_crc_error_filter_onuid_accept_broadcast_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_ds_bwmap_drop_crc_error_filter_onuid_strict_plen_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_ds_gem_assembly_threshold_threshold(cparser_context_t *context,
    uint32_t *threshold_ptr);
cparser_result_t cparser_cmd_gpon_set_ds_eth_drop_crc_error_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_ds_eth_pti_pettern_pettern_pti_mask_mask(cparser_context_t *context,
    uint32_t *pettern_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_gpon_set_ds_omci_pti_pettern_pettern_pti_mask_mask(cparser_context_t *context,
    uint32_t *pettern_ptr,
    uint32_t *mask_ptr);
cparser_result_t cparser_cmd_gpon_set_us_laser_on_offset_on_offset_off_offset_off_offset(cparser_context_t *context,
    uint32_t *on_offset_ptr,
    uint32_t *off_offset_ptr);
cparser_result_t cparser_cmd_gpon_set_us_phy_scramble_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_us_phy_burst_polarity_high_low(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_us_phy_auto_sstart_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_us_phy_suppress_laser_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_us_ploam_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_us_dbr_state_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_multicast_filter_broadcast_pass_non_multicast_pass_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_multicast_filter_prefix_ip_prefix_ip6_prefix(cparser_context_t *context,
    uint32_t *prefix_ptr);
cparser_result_t cparser_cmd_gpon_set_multicast_filter_force_ip_force_ip6_pass_drop_normal(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_multicast_filter_filter_mode_include_exclude(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_rdi_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_tx_laser_force_on_force_off_normal(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_tx_force_idle_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_debug_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_auto_tcont_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_auto_boh_enable_disable(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_set_eqd_offset_plus_minus_offset(cparser_context_t *context,
    uint32_t *offset_ptr);
cparser_result_t cparser_cmd_gpon_set_aes_framecnt_framecnt(cparser_context_t *context,
    uint32_t *framecnt_ptr);
cparser_result_t cparser_cmd_gpon_set_aes_key_byte0_byte1_byte2_byte3_byte4_byte5_byte6_byte7_byte8_byte9_byte10_byte11_byte12_byte13_byte14_byte15(cparser_context_t *context,
    uint32_t *byte0_ptr,
    uint32_t *byte1_ptr,
    uint32_t *byte2_ptr,
    uint32_t *byte3_ptr,
    uint32_t *byte4_ptr,
    uint32_t *byte5_ptr,
    uint32_t *byte6_ptr,
    uint32_t *byte7_ptr,
    uint32_t *byte8_ptr,
    uint32_t *byte9_ptr,
    uint32_t *byte10_ptr,
    uint32_t *byte11_ptr,
    uint32_t *byte12_ptr,
    uint32_t *byte13_ptr,
    uint32_t *byte14_ptr,
    uint32_t *byte15_ptr);
cparser_result_t cparser_cmd_gpon_get_serial_number(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_password(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_active_timer(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_ds_laser_ds_phy_ds_ploam_ds_bwmap_ds_gem_ds_eth_ds_omci(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_us_laser_us_phy_us_ploam_us_dbr(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_onu_state(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_tcont_alloc_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_get_ds_flow_flow_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_get_us_flow_flow_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_get_multicast_filter(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_multicast_filter_entry_index_index(cparser_context_t *context,
    uint32_t *index_ptr);
cparser_result_t cparser_cmd_gpon_get_rdi(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_alarm_status(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_tx(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_auto_tcont(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_auto_boh(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_eqd_offset(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_get_aes_framecnt(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_activate_init_state_o1_o7(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_deactivate(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_add_tcont_alloc_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_add_ds_flow_flow_id_id_gem_port_gem_ether_multicast_aes(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *gem_ptr);
cparser_result_t cparser_cmd_gpon_add_ds_flow_flow_id_id_gem_port_gem_omci_aes(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *gem_ptr);
cparser_result_t cparser_cmd_gpon_add_us_flow_flow_id_id_gem_port_gem_ether_omci(cparser_context_t *context,
    uint32_t *id_ptr,
    uint32_t *gem_ptr);
cparser_result_t cparser_cmd_gpon_add_multicast_filter_entry_mac_address_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_gpon_del_tcont_alloc_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_del_ds_flow_flow_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_del_us_flow_flow_id_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_del_multicast_filter_entry_mac_address_mac(cparser_context_t *context,
    cparser_macaddr_t *mac_ptr);
cparser_result_t cparser_cmd_gpon_show_version_dev_info_gtc_tcont_ds_flow_us_flow_multicast_filter_entry(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_show_counter_global_active_ds_phy_ds_plm_ds_bw_ds_gem_ds_eth_ds_omci_us_phy_us_dbr_us_plm_us_gem_us_eth_us_omci(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_show_counter_tcont_tcont_id(cparser_context_t *context,
    uint32_t *tcont_id_ptr);
cparser_result_t cparser_cmd_gpon_show_counter_flow_flow_id(cparser_context_t *context,
    uint32_t *flow_id_ptr);
cparser_result_t cparser_cmd_gpon_initial(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_deinitial(cparser_context_t *context);
cparser_result_t cparser_cmd_gpon_reg_get_page_page_offset_offset(cparser_context_t *context,
    uint32_t *page_ptr,
    uint32_t *offset_ptr);
cparser_result_t cparser_cmd_gpon_reg_set_page_page_offset_offset_value_value(cparser_context_t *context,
    uint32_t *page_ptr,
    uint32_t *offset_ptr,
    uint32_t *value_ptr);
cparser_result_t cparser_cmd_gpon_unit_test_id(cparser_context_t *context,
    uint32_t *id_ptr);
cparser_result_t cparser_cmd_gpon_pkt_gen_buf_item_item_da_dmac_sa_smac_vid_vid_pattern_pattern_length_length(cparser_context_t *context,
    uint32_t *item_ptr,
    cparser_macaddr_t *dmac_ptr,
    cparser_macaddr_t *smac_ptr,
    uint32_t *vid_ptr,
    uint32_t *pattern_ptr,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_gpon_pkt_gen_cfg_item_item_tcont_tcont_gem_gem_tx_length_length_omci(cparser_context_t *context,
    uint32_t *item_ptr,
    uint32_t *tcont_ptr,
    uint32_t *gem_ptr,
    uint32_t *length_ptr);
cparser_result_t cparser_cmd_gpon_omci_tx_data1_data2_data3_data4_data5_data6_data7_data8_data9_data10_data11_data12(cparser_context_t *context,
    uint32_t *data1_ptr,
    uint32_t *data2_ptr,
    uint32_t *data3_ptr,
    uint32_t *data4_ptr,
    uint32_t *data5_ptr,
    uint32_t *data6_ptr,
    uint32_t *data7_ptr,
    uint32_t *data8_ptr,
    uint32_t *data9_ptr,
    uint32_t *data10_ptr,
    uint32_t *data11_ptr,
    uint32_t *data12_ptr);

#endif /* __CPARSER_TREE_H__ */
