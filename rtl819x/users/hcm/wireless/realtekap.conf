##### Realtek configuration file ##############################################
# Empty lines and lines starting with # are ignored

# AP netdevice name (without 'ap' postfix, i.e., wlan0 uses wlan0ap for
# management frames); ath0 for madwifi
#wlan0_opmode=16
#interface=wlan0    (unavailable to change)
#wlan0_hwaddr=00e04c819635

##### IEEE 802.11 related configuration #######################################
# SSID to be used in IEEE 802.11 management frames
wlan0_ssid=NFBI_CFG_AP
wlan0_ssid2scan=NFBI_CFG_AP (default BSS try to connect under client mode)
wlan0_dot11DefaultSSID="defaultSSID"

# Country code (ISO/IEC 3166-1). Used to set regulatory domain.
# Set as needed to indicate country in which device is operating.
# This can limit available channels and transmit power.
wlan0_regdomain=1 (DOMAIN_FCC)

# Operation mode (a = IEEE 802.11a, b = IEEE 802.11b, g = IEEE 802.11g,
# Default: IEEE 802.11b
wlan0_band=11 (which means B/G, A is not supported)

# Channel number (IEEE 802.11)
# (default: 0, i.e., not set)
wlan0_channel=6

# Beacon interval in kus (1.024 ms) (default: 100; range 15..65535)
wlan0_bcnint=100

# DTIM (delivery trafic information message) period (range 1..255):
# number of beacons between DTIMs (1 = every beacon includes DTIM element)
# (default: 2)
wlan0_dtimperiod=3

# RTS/CTS threshold; 2347 = disabled (default); range 0..2347
wlan0_rtsthres=2347

# Fragmentation threshold; 2346 = disabled (default); range 256..2346
wlan0_fragthres=2346

# Rate configuration
# Default is to enable all rates supported by the hardware. This configuration
# item allows this list be filtered so that only the listed rates will be left
# in the list. If the list is empty, all rates are used. This list can have
# entries that are not in the list of rates the hardware supports (such entries
# are ignored). The entries in this list are in 100 kbps, i.e., 11 Mbps = 110.
# If this item is present, at least one rate have to be matching with the rates
# hardware supports.
# default: use the most common supported rate setting for the selected
# hw_mode (i.e., this line can be removed from configuration file in most
# cases)
wlan0_oprates=0

# Basic rate set configuration
# List of rates (in 100 kbps) that are included in the basic rate set.
wlan0_basicrates=0
wlan0_fixrate=0
wlan0_autorate=1

# Short Preamble
# This parameter can be used to enable optional use of short preamble for
# frames sent at 2 Mbps, 5.5 Mbps, and 11 Mbps to improve network performance.
# This applies only to IEEE 802.11b-compatible networks and this should only be
# enabled if the local hardware supports use of short preamble. If any of the
# associated STAs do not support short preamble, use of short preamble will be
# disabled (and enabled when such STAs disassociate) dynamically.
# 0 = do not allow use of short preamble (default)
# 1 = allow use of short preamble
wlan0_preamble=0

# Station MAC address -based authentication
# 0 = disabled
# 1 = accept MACs in list
# 2 = deny MACs in list
wlan0_aclmode=0

# Accept/deny lists are read from separate files (containing list of
# MAC addresses, one per line). Use absolute path name to make sure that the
# files can be read on SIGHUP configuration reloads.
wlan0_aclnum=0

# IEEE 802.11 specifies two authentication algorithms. It can be
# configured to allow both of these or only one. Open system authentication
# should be used with IEEE 802.1X.
# Bit fields of allowed authentication algorithms:
# bit 0 = Open System Authentication
# bit 1 = Shared Key Authentication (requires WEP)
wlan0_authtype=2

# Send empty SSID in beacons and ignore probe request frames that do not
# specify full SSID, i.e., require stations to know SSID.
# default: disabled (0)
# 1 = send empty (length=0) SSID in beacon and ignore probe request for
#     broadcast SSID
# 2 = clear SSID (ASCII 0), but keep the original length (this may be required
#     with some clients that do not support empty SSID) and ignore probe
#     requests for broadcast SSID
wlan0_hiddenAP=0

# TX queue parameters (EDCF / bursting)
# default for all these fields: not set, use hardware defaults
# tx_queue_<queue name>_<param>
# queues: data0, data1, data2, data3, after_beacon, beacon
#		(data0 is the highest priority queue)
# parameters:
#   aifs: AIFS (default 2)
#   cwmin: cwMin (1, 3, 7, 15, 31, 63, 127, 255, 511, 1023)
#   cwmax: cwMax (1, 3, 7, 15, 31, 63, 127, 255, 511, 1023); cwMax >= cwMin
#   burst: maximum length (in milliseconds with precision of up to 0.1 ms) for
#          bursting
#
# Default WMM parameters (IEEE 802.11 draft; 11-03-0504-03-000e):
# These parameters are used by the access point when transmitting frames
# to the clients.
#
# Low priority / AC_BK = background
#tx_queue_data3_aifs=7
#tx_queue_data3_cwmin=15
#tx_queue_data3_cwmax=1023
#tx_queue_data3_burst=0
# Note: for IEEE 802.11b mode: cWmin=31 cWmax=1023 burst=0
#
# Normal priority / AC_BE = best effort
#tx_queue_data2_aifs=3
#tx_queue_data2_cwmin=15
#tx_queue_data2_cwmax=63
#tx_queue_data2_burst=0
# Note: for IEEE 802.11b mode: cWmin=31 cWmax=127 burst=0
#
# High priority / AC_VI = video
#tx_queue_data1_aifs=1
#tx_queue_data1_cwmin=7
#tx_queue_data1_cwmax=15
#tx_queue_data1_burst=3.0
# Note: for IEEE 802.11b mode: cWmin=15 cWmax=31 burst=6.0
#
# Highest priority / AC_VO = voice
#tx_queue_data0_aifs=1
#tx_queue_data0_cwmin=3
#tx_queue_data0_cwmax=7
#tx_queue_data0_burst=1.5
# Note: for IEEE 802.11b mode: cWmin=7 cWmax=15 burst=3.3
#

# 802.1D Tag (= UP) to AC mappings
# WMM specifies following mapping of data frames to different ACs. This mapping
# can be configured using Linux QoS/tc and sch_pktpri.o module.
# 802.1D Tag	802.1D Designation	Access Category	WMM Designation
# 1		BK			AC_BK		Background
# 2		-			AC_BK		Background
# 0		BE			AC_BE		Best Effort
# 3		EE			AC_BE		Best Effort
# 4		CL			AC_VI		Video
# 5		VI			AC_VI		Video
# 6		VO			AC_VO		Voice
# 7		NC			AC_VO		Voice
# Data frames with no priority information: AC_BE
# Management frames: AC_VO
# PS-Poll frames: AC_BE

# Default WMM parameters (IEEE 802.11 draft; 11-03-0504-03-000e):
# for 802.11a or 802.11g networks
# These parameters are sent to WMM clients when they associate.
# The parameters will be used by WMM clients for frames transmitted to the
# access point.
#
# note - txop_limit is in units of 32microseconds
# note - acm is admission control mandatory flag. 0 = admission control not
# required, 1 = mandatory
# note - here cwMin and cmMax are in exponent form. the actual cw value used
# will be (2^n)-1 where n is the value given here
#
wlan0_qos_enable=1
#
# Low priority / AC_BK = background
#wme_ac_bk_cwmin=4
#wme_ac_bk_cwmax=10
#wme_ac_bk_aifs=7
#wme_ac_bk_txop_limit=0
#wme_ac_bk_acm=0
# Note: for IEEE 802.11b mode: cWmin=5 cWmax=10
#
# Normal priority / AC_BE = best effort
#wme_ac_be_aifs=3
#wme_ac_be_cwmin=4
#wme_ac_be_cwmax=10
#wme_ac_be_txop_limit=0
#wme_ac_be_acm=0
# Note: for IEEE 802.11b mode: cWmin=5 cWmax=7
#
# High priority / AC_VI = video
#wme_ac_vi_aifs=2
#wme_ac_vi_cwmin=3
#wme_ac_vi_cwmax=4
#wme_ac_vi_txop_limit=94
#wme_ac_vi_acm=0
# Note: for IEEE 802.11b mode: cWmin=4 cWmax=5 txop_limit=188
#
# Highest priority / AC_VO = voice
#wme_ac_vo_aifs=2
#wme_ac_vo_cwmin=2
#wme_ac_vo_cwmax=3
#wme_ac_vo_txop_limit=47
#wme_ac_vo_acm=0
# Note: for IEEE 802.11b mode: cWmin=3 cWmax=4 burst=102

# Static WEP key configuration
#
# The key number to use when transmitting.
# It must be between 0 and 3, and the corresponding key must be set.
# default: not set
wlan0_wepdkeyid=0

# The WEP keys to use.
# A key may be a quoted string or unquoted hexadecimal digits.
# The key length should be 5, 13, or 16 characters, or 10, 26, or 32
# digits, depending on whether 40-bit (64-bit), 104-bit (128-bit), or
# 128-bit (152-bit) WEP is used.
# Only the default key must be supplied; the others are optional.
# default: not set
wlan0_wepkey1=
wlan0_wepkey2=
wlan0_wepkey3=
wlan0_wepkey4=

# Station inactivity limit
#
# If a station does not send anything in ap_max_inactivity seconds, an
# empty data frame is sent to it in order to verify whether it is
# still in range. If this frame is not ACKed, the station will be
# disassociated and then deauthenticated. This feature is used to
# clear station table of old entries when the STAs move out of the
# range.
#
# The station can associate again with the AP if it is still in range;
# this inactivity poll is just used as a nicer way of verifying
# inactivity; i.e., client will not report broken connection because
# disassociation frame is not sent immediately without first polling
# the STA with a data frame.
# default: 300 (i.e., 5 minutes)
wlan0_expired_time=30000

##### IEEE 802.11n related configuration ######################################

# ieee80211n: Whether IEEE 802.11n (HT) is enabled
# 0 = disabled (default)
# 1 = enabled
#??ieee80211n=1

# ht_capab: HT capabilities (list of flags)
# LDPC coding capability: [LDPC] = supported
# Supported channel width set: [HT40-] = both 20 MHz and 40 MHz with secondary
#	channel below the primary channel; [HT40+] = both 20 MHz and 40 MHz
#	with secondary channel below the primary channel
#	(20 MHz only if neither is set)
#	Note: There are limits on which channels can be used with HT40- and
#	HT40+. Following table shows the channels that may be available for
#	HT40- and HT40+ use per IEEE 802.11n Annex J:
#	freq		HT40-		HT40+
#	2.4 GHz		5-13		1-7 (1-9 in Europe/Japan)
#	5 GHz		40,48,56,64	36,44,52,60
#	(depending on the location, not all of these channels may be available
#	for use)
# Spatial Multiplexing (SM) Power Save: [SMPS-STATIC] or [SMPS-DYNAMIC]
#	(SMPS disabled if neither is set)
# HT-greenfield: [GF] (disabled if not set)
# Short GI for 20 MHz: [SHORT-GI-20] (disabled if not set)
# Short GI for 40 MHz: [SHORT-GI-40] (disabled if not set)
# Tx STBC: [TX-STBC] (disabled if not set)
# Rx STBC: [RX-STBC1] (one spatial stream), [RX-STBC12] (one or two spatial
#	streams), or [RX-STBC123] (one, two, or three spatial streams); Rx STBC
#	disabled if none of these set
# HT-delayed Block Ack: [DELAYED-BA] (disabled if not set)
# Maximum A-MSDU length: [MAX-AMSDU-7935] for 7935 octets (3839 octets if not
#	set)
# DSSS/CCK Mode in 40 MHz: [DSSS_CCK-40] = allowed (not allowed if not set)
# PSMP support: [PSMP] (disabled if not set)
# L-SIG TXOP protection support: [LSIG-TXOP-PROT] (disabled if not set)
#(ht_capab=[HT40-][SHORT-GI-20][SHORT-GI-40])
wlan0_use40M=0
wlan0_2ndchoffset=0
wlan0_shortGI20M=1
wlan0_shortGI40M=1
wlan0_disable_protection=0
wlan0_stbc=0
wlan0_coexist=0
wlan0_ampdu=1
wlan0_amsdu=1

##### IEEE 802.1X-2004 related configuration ##################################

# Require IEEE 802.1X authorization
wlan0_802_1x=0

##### IEEE 802.11f - Inter-Access Point Protocol (IAPP) #######################

# Enable/disable IAPP
wlan0_iapp_enable=1

##### RADIUS client configuration #############################################
# for IEEE 802.1X with external Authentication Server, IEEE 802.11
# authentication with external ACL for MAC addresses, and accounting


# RADIUS authentication server
wlan_comm_auth_server_addr=127.0.0.1 (MIB_WLAN_RS_IP)
wlan_comm_auth_server_port=1812      (MIB_WLAN_RS_PORT)
wlan_comm_auth_server_shared_secret=secret (MIB_WLAN_RS_PASSWORD)

#MIB_WLAN_ACCOUNT_RS_ENABLED
# RADIUS accounting server
wlan_comm_acct_server_addr=127.0.0.1 (MIB_WLAN_ACCOUNT_RS_IP)
wlan_comm_acct_server_port=1813      (MIB_WLAN_ACCOUNT_RS_PORT)
wlan_comm_acct_server_shared_secret=secret (MIB_WLAN_ACCOUNT_RS_PASSWORD)

# Retry interval for trying to return to the primary RADIUS server (in
# seconds). RADIUS client code will automatically try to use the next server
# when the current server is not replying to requests. If this interval is set,
# primary server will be retried after configured amount of time even if the
# currently used secondary server is still working.
wlan_comm_radius_retry_primary_interval=600  (MIB_WLAN_RS_INTERVAL_TIME)


# Interim accounting update interval
# If this is set (larger than 0) and acct_server is configured, Auth daemon will
# send interim accounting updates every N seconds. Note: if set, this overrides
# possible Acct-Interim-Interval attribute in Access-Accept message. 
# This value should not be less 600 (10 minutes) and must not be less than
# 60 (1 minute).
wlan_comm_radius_acct_interim_interval=600   (MIB_WLAN_ACCOUNT_RS_INTERVAL_TIME)

##### WPA/IEEE 802.11i configuration ##########################################

# Enable WPA. Setting this variable configures the AP to require WPA (either
# WPA-PSK or WPA-RADIUS/EAP based on other configuration). For WPA-PSK, either
# wpa_psk or wpa_passphrase must be set and wpa_key_mgmt must include WPA-PSK.
# For WPA-RADIUS/EAP, ieee8021x must be set (but without dynamic WEP keys),
# RADIUS authentication server must be configured, and WPA-EAP must be included
# in wpa_key_mgmt.
# This field is a bit field that can be used to enable WPA (IEEE 802.11i/D3.0)
# and/or WPA2 (full IEEE 802.11i/RSN):
# bit0 = WEP
# bit1 = WPA
# bit2 = IEEE 802.11i/RSN (WPA2) (dot11RSNAEnabled)
# 7: WAPI
wlan0_encmode=0

# WPA pre-shared keys for WPA-PSK. This can be either entered as a 256-bit
# secret in hex format (64 hex digits), wpa_psk, or as an ASCII passphrase
# (8..63 characters) that will be converted to PSK. This conversion uses SSID
# so the PSK changes when ASCII passphrase is used and the SSID is changed.
# wpa_psk (dot11RSNAConfigPSKValue)
# wpa_passphrase (dot11RSNAConfigPSKPassPhrase)
wlan0_passphrase=""

# Set of accepted key management algorithms (WPA-PSK, WPA-EAP, or both). The
# entries are separated with a space. WPA-PSK-SHA256 and WPA-EAP-SHA256 can be
# added to enable SHA256-based stronger algorithms.
# (dot11RSNAConfigAuthenticationSuitesTable)
#(wpa_key_mgmt=WPA-PSK WPA-EAP)
wlan0_psk_enable=0
#(MIB_WLAN_WPA_AUTH)

# Set of accepted cipher suites (encryption algorithms) for pairwise keys
# (unicast packets). This is a space separated list of algorithms:
# CCMP = AES in Counter mode with CBC-MAC [RFC 3610, IEEE 802.11i/D7.0]
# TKIP = Temporal Key Integrity Protocol [IEEE 802.11i/D7.0]
# Group cipher suite (encryption algorithm for broadcast and multicast frames)
# is automatically selected based on this configuration. If only CCMP is
# allowed as the pairwise cipher, group cipher will also be CCMP. Otherwise,
# TKIP will be used as the group cipher.
# (dot11RSNAConfigPairwiseCiphersTable)
# Pairwise cipher for WPA (v1) (default: TKIP)
wlan0_wpa_cipher=0   (wpa)
# Pairwise cipher for RSN/WPA2
wlan0_wpa2_cipher=0  (rsn)

# Time interval for rekeying GTK (broadcast/multicast encryption keys) in
# seconds. (dot11RSNAConfigGroupRekeyTime)
wlan0_gk_rekey=86400

##### Wi-Fi Protected Setup (WPS) #############################################

# WPS state
# 1 = WPS enabled, not configured
# 5 = WPS enabled, configured
#(MIB_WSC_ENABLE)
wlan0_wsc_enable=0
wlan0_wps_mode=1

# Universally Unique IDentifier (UUID; see RFC 4122) of the device
# This value is used as the UUID for the internal WPS Registrar. If the AP
# is also using UPnP, this value should be set to the device's UPnP UUID.
# If not configured, UUID will be generated based on the local MAC address.
wps_uuid=6304125310192006122800e04c819635

# Note: If wpa_psk_file is set, WPS is used to generate random, per-device PSKs
# that will be appended to the wpa_psk_file. If wpa_psk_file is not set, the
# default PSK (wpa_psk/wpa_passphrase) will be delivered to Enrollees. Use of
# per-device PSKs is recommended as the more secure option (i.e., make sure to
# set wpa_psk_file when using WPS with WPA-PSK).

# When an Enrollee requests access to the network with PIN method, the Enrollee
# PIN will need to be entered for the Registrar. PIN request notifications are
# sent to WPS daemon by CLI. In addition, they can be written to a
# text file that could be used, e.g., to populate the AP administration UI with
# pending PIN requests. If the following variable is set, the PIN requests will
# be written to the configured file.
#command: pincode, wscd -sig_pin

# Device Name
# User-friendly description of device; up to 32 octets encoded in UTF-8
wps_device_name="Realtek Wireless AP"

# Manufacturer
# The manufacturer of the device (up to 64 ASCII characters)
wps_manufacturer="Realtek Semiconductor Corp."

# Model Name
# Model of the device (up to 32 ASCII characters)
wps_model_name="RTL8xxx"

# Model Number
# Additional device description (up to 32 ASCII characters)
wps_model_num="EV-2009-02-06"

# Serial Number
# Serial number of the device (up to 32 characters)
wps_serial_num="123456789012347"

# Primary Device Type
# Used format: <categ>-<OUI>-<subcateg>
# categ = Category as an integer value
# OUI = OUI and type octet as a 4-octet hex-encoded value; 0050F204 for
#       default WPS OUI
# subcateg = OUI-specific Sub Category as an integer value
# Examples:
#   1-0050F204-1 (Computer / PC)
#   1-0050F204-2 (Computer / Server)
#   5-0050F204-1 (Storage / NAS)
#   6-0050F204-1 (Network Infrastructure / AP)
wps_device_category_id=6
wps_device_oui=0050f204
wps_device_sub_category_id=1

# OS Version
# 4-octet operating system version number (hex string)
#os_version=01020300
#??

# Config Methods
# List of the supported configuration methods
#(config_methods=label display push_button keypad)
wps_config_method=134

# Access point PIN for initial configuration and adding Registrars
wps_pin_code=90274145

# WPS UPnP interface
# If set, support for external Registrars is enabled.
wps_upnp_enable=1

# Friendly Name (required for UPnP)
# Short description for end use. Should be less than 64 characters.
#friendly_name=WPS Access Point

# Manufacturer URL (optional for UPnP)
wps_manufacturerURL="http://www.realtek.com/"

# Model Description (recommended for UPnP)
# Long description for end user. Should be less than 128 characters.
wps_modelDescription="WLAN Access Point"

# Model URL (optional for UPnP)
wps_modelURL="http://www.realtek.com/"

# Universal Product Code (optional for UPnP)
# 12-digit, all-numeric code that identifies the consumer package.
#wps_upc=123456789012
# optional, not supported yet

##### Multiple BSSID support ##################################################
#
# Above configuration is using the default interface (wlan#, or multi-SSID VLAN
# interfaces). Other BSSIDs can be added by using separator 'bss' with
# default interface name to be allocated for the data packets of the new BSS.
#
#
# BSSIDs are assigned in order to each BSS, unless an explicit BSSID is
# specified using the 'bssid' parameter.
# If an explicit BSSID is specified, it must be chosen such that it:
# - results in a valid MASK that covers it and the dev_addr
# - is not the same as the MAC address of the radio
# - is not the same as any other explicitly specified BSSID
#
#
wlan0_vap_enable=1

wlan0-va0_opmode=16
wlan0-va0_hwaddr=00e0358196b2
wlan0-va0_ssid="NFBI_CFG_VAP1"
wlan0-va0_ssid2scan="NFBI_CFG_VAP1"
wlan0-va0_dot11DefaultSSID=""
wlan0-va0_regdomain=1
wlan0-va0_band=11
wlan0-va0_channel=6
wlan0-va0_bcnint=100
wlan0-va0_dtimperiod=3
wlan0-va0_rtsthres=2347
wlan0-va0_fragthres=2346
wlan0-va0_basicrates=0
wlan0-va0_oprates=0
wlan0-va0_fixrate=0
wlan0-va0_autorate=1
wlan0-va0_preamble=0
wlan0-va0_aclmode=0
wlan0-va0_aclnum=0
wlan0-va0_authtype=2
wlan0-va0_hiddenAP=0
wlan0-va0_wepdkeyid=0
wlan0-va0_wepkey1=
wlan0-va0_wepkey2=
wlan0-va0_wepkey3=
wlan0-va0_wepkey4=
wlan0-va0_expired_time=30000
wlan0-va0_use40M=0
wlan0-va0_2ndchoffset=0
wlan0-va0_shortGI20M=1
wlan0-va0_shortGI40M=1
wlan0-va0_disable_protection=0
wlan0-va0_stbc=0
wlan0-va0_coexist=0
wlan0-va0_ampdu=0
wlan0-va0_amsdu=0
wlan0-va0_802_1x=1
wlan0-va0_iapp_enable=1
wlan0-va0_encmode=2
wlan0-va0_passphrase="12345678"
wlan0-va0_psk_enable=1
wlan0-va0_wpa_cipher=8
wlan0-va0_wpa2_cipher=0
wlan0-va0_gk_rekey=86400
wlan0-va0_wsc_enable=3
wlan0-va0_vap_enable=0
wlan0-va0_qos_enable=1

wlan0-va0_disable_brsc=1
wlan0-va0_led_type=11
wlan0-va0_block_relay=0
wlan0-va0_wifi_specific=2
wlan0-va0_wds_pure=0
wlan0-va0_wds_num=0
wlan0-va0_wds_enable=0
wlan0-va0_wds_encrypt=0
wlan0-va0_wds_wepkey=""
wlan0-va0_nat25_disable=0
wlan0-va0_macclone_enable=0
wlan0-va0_deny_legacy=0
wlan0-va0_guest_access=0
wlan0-va0_block_relay=0