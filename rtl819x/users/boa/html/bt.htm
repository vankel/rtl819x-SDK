<html>
<! Copyright (c) Realtek Semiconductor Corp., 2003. All Rights Reserved. ->
<head>
<meta http-equiv="Content-Type" content="text/html">
<title>BT Controller</title>
<SCRIPT>
var myData = <% getInfo("torrents");%>;
//var myData = [['0.torrent','downloading','222','2222','222','3333','3333','4444','0'],
//	      ['1.torrent','downloading','222','2222','222','3333','3333','4444','-1'],
//	      ['2.torrent','downloading','222','2222','222','3333','3333','4444','2']]; 
var DataArray = new Array();
var TRStyle="<tr bgcolor=#7f7f7f><td width=\"4%\"><font size=2><b>Selected</b></font></td><td width=\"12%\"><font size=2><b>Torrent</b></font></td><td width=\"12%\"><font size=2><b>Status</b></font></td><td width=\"12%\"><font size=2><b>size</b></font></td><td width=\"12%\"><font size=2><b>Download/Upload</b></font></td><td width=\"12%\"><font size=2><b>Seeders/leechers</b></font></td><td width=\"12%\"><font size=2><b>ETA/Ratio</b></font></td><td width=\"12%\"><font size=2><b>Upload rate [KB/s]</b></font></td><td width=\"12%\"><font size=2><b>Download rate [KB/s]</b></font></td></tr>";
var TDCheckBoxHeader="<td width=\"4%\"><input type=\"checkbox\" name=\"CHECKBOX\" value=" 
var TDTorrentHeader="<td width=\"12%\"><A HREF=\"/btclient.htm?ctorrent=";
var TDStatusHeader="<td width=\"12%\">";
var TDSizeHeader="<td width=\"12%\">";
var TDDownUploadSizeHeader="<td width=\"12%\">";
var TDSeederHeader="<td width=\"12%\">";
var TDETARatioHeader="<td width=\"12%\">";
var TDUprateHeader="<td width=\"12%\">";
var TDDownrateHeader="<td width=\"12%\">";
var TDHeader="<td width=\"12%\">";
var TDTorrentHrefTail="\">";
var TDTorrentTail="</A></td>";
var TDCheckBoxTail=" onclick=buttonDisplay()></td>";
var TDTail="</td>";
var TRHeader="<tr>";
var TRTail="</tr>";
var selectedInvalidCtorrent=0;
function Data(torrent,btstatus,size,updownsize,seeder,etaratio,uprate,downrate,index,cindex) 
{
	this.torrent=torrent;
	this.btstatus=btstatus;
	this.size=size;
	this.updownsize=updownsize;
	this.seeder=seeder;
	this.etaratio=etaratio;
	this.uprate=uprate;
	this.downrate=downrate;
	this.index=index;
	this.cindex=cindex
}
function initData()
{
        var i=0;
        for(i=0; i<myData.length ; i++ )
		DataArray[DataArray.length++] = new Data(myData[i][0], myData[i][1], myData[i][2], myData[i][3], myData[i][4], myData[i][5], myData[i][6], myData[i][7],myData[i][8],myData[i][9]);
        DataShow();
	BtcheckboxDisplay();
	buttonDisplay();
	StatusShow();
}
function layerWrite(id,nestref,text)
{
        document.getElementById(id).innerHTML = text;
}
function gettotalspeed(upordown)
{
	var i=0;
	totalspeed=0;
	for(i=0;i<DataArray.length;i++)
	{
		if(DataArray[i].btstatus == "Running")
		{
			if(upordown=="upload")
			{
				totalspeed+=parseInt(DataArray[i].uprate);
			}	
			else if(upordown=="download")
			{
				totalspeed+=parseInt(DataArray[i].downrate);
			}
		}	
	}
	return totalspeed;
}
function StatusShow()
{
	var fm=document.formBTclient;
	fm.torrentsnum.value=DataArray.length;
	fm.uploadrate.value=gettotalspeed("upload");
	fm.downloadrate.value=gettotalspeed("download");
}
function BtcheckboxDisplay()
{
	var fm=document.formBT;
	var enabled=<% getInfo("bt_enabled");%>;
	if(enabled == 1)
	{
		fm.bt_enabled.checked=true;
	}
	else
	{
		fm.bt_enabled.checked=false;
	}
}
function gettorrentStatus(index)
{
	var i=0;
	for(i=0;i<DataArray.length;i++)
	{
		if(DataArray[i].index == index)
			return DataArray[i].btstatus;
	}	
}
/*state define : 0 nothing  1 all not running 2 all running  4 all paused
 3 not running + running  5 not running + paused 6 running+paused 7 Not running + runing + paused
 */
function checkSelectedClientStatus()
{
	var state=0;
	var index=0;
	var btstatus;
	var fm=document.formBTclient;
	if(DataArray.length == 0)
	{
		state=0;
	}
	else if(DataArray.length == 1)
	{
		if(fm.CHECKBOX.checked)
		{
			btstatus=gettorrentStatus(fm.CHECKBOX.value);
			if(btstatus == "Not Running")
				state=1;
			else if(btstatus == "Running")
				state=2;
			else if(btstatus == "Paused")
				state=4;
		}
	}
	else if(DataArray.length > 1)
	{
		for(index=0;index<DataArray.length;index++)
		{
			if(fm.CHECKBOX[index].checked)
                	{
                        	btstatus=gettorrentStatus(fm.CHECKBOX[index].value);
                		if(btstatus == "Not Running")
				{
					state|=1;
				}
                		else if(btstatus == "Running")
				{	
                        		state|=2;
				}
                		else if(btstatus == "Paused")
				{	
                        		state|=4;
				}
			}
		}
	}
	return state
}
function buttonDisplay()
{
	var fm=document.formBTclient;
	var count;
	var state=0;
	if(DataArray.length == 0)
	{
		fm.start.disabled=true;	
		fm.pause.disabled=true;	
		fm.stop.disabled=true;	
		fm.update.disabled=true;	
		fm.btdelete.disabled=true;	
		fm.details.disabled=true;	
		fm.info.disabled=true;	
	}
	count=getselectedindex();
	if(count == 0)
	{
		fm.start.disabled=true; 
                fm.pause.disabled=true; 
                fm.stop.disabled=true;  
                fm.update.disabled=true;        
                fm.btdelete.disabled=true;      
                fm.details.disabled=true;       
                fm.info.disabled=true;
	}
	if(count == 1)
	{
		fm.start.disabled=false; 
                fm.pause.disabled=false; 
                fm.stop.disabled=false;  
                fm.update.disabled=false;        
                fm.btdelete.disabled=false; 
		fm.details.disabled=false;	
		fm.info.disabled=false;	
	}
	else
	{
		fm.details.disabled=true;	
		fm.info.disabled=true;	
	}
        state=checkSelectedClientStatus();
        if(state == 0)
        {
                //do nothing
        }
        else if(state == 1)
        {
                /*all not running only allow start and delete*/
                fm.start.disabled=false; 
                fm.pause.disabled=true; 
                fm.stop.disabled=true;  
                fm.update.disabled=true;        
                fm.btdelete.disabled=false;      
                //fm.details.disabled=true;       
                //fm.info.disabled=true;        
        }
        else if(state == 2)
        {
                /*all running. pause stop update delete. not start*/
                fm.start.disabled=true; 
                fm.pause.disabled=false; 
                fm.stop.disabled=false;  
                fm.update.disabled=false;        
                fm.btdelete.disabled=false;      
                //fm.details.disabled=true;       
                //fm.info.disabled=true;        
        }
        else if(state == 4)
        {
                /*all paused*/
                fm.start.disabled=true; 
                fm.pause.value="continue";
                fm.pause.disabled=false; 
                fm.stop.disabled=false;  
                fm.update.disabled=false;        
                fm.btdelete.disabled=false;      
                //fm.details.disabled=true;       
                //fm.info.disabled=true;        
        }
        else if(state == 3)
        {
                /*not running + running*/
                fm.start.disabled=true; 
                fm.pause.disabled=true; 
                fm.stop.disabled=true;  
                fm.update.disabled=true;        
                fm.btdelete.disabled=false;      
                //fm.details.disabled=true;       
                //fm.info.disabled=true;        
                
        }
        else if(state == 5)
        {       
                /*not running+ pause*/
                fm.start.disabled=true; 
                fm.pause.disabled=true; 
                fm.stop.disabled=true;  
                fm.update.disabled=true;        
                fm.btdelete.disabled=false;      
                //fm.details.disabled=true;       
                //fm.info.disabled=true;        
        }
        else if(state == 6)
        {
                /*running + paused*/
                fm.start.disabled=true; 
                fm.pause.disabled=true; 
                fm.stop.disabled=false;  
                fm.update.disabled=false;        
                fm.btdelete.disabled=false;      
                //fm.details.disabled=true;       
                //fm.info.disabled=true;        
        }
        else if(state == 7)
        {
                /*not running + running + pasued*/
                fm.start.disabled=true; 
                fm.pause.disabled=true; 
                fm.stop.disabled=true;  
                fm.update.disabled=true;        
                fm.btdelete.disabled=false;      
                //fm.details.disabled=true;       
                //fm.info.disabled=true;        
        }
}

function DataShow()
{
	var v="";
	v+="<table border=\'1\' width=\"98%\">";
	v+=TRStyle;
	for(var i=0; i<DataArray.length; i++) 
        {
		v +=TRHeader;
                v +=TDCheckBoxHeader+DataArray[i].index+TDCheckBoxTail;
		if(DataArray[i].cindex != "-1")
                	v +=TDTorrentHeader+DataArray[i].cindex+TDTorrentHrefTail+DataArray[i].torrent+TDTorrentTail;
		else
			v +=TDHeader+DataArray[i].torrent+TDTail;
                v +=TDStatusHeader+DataArray[i].btstatus+TDTail;
                v +=TDSizeHeader+DataArray[i].size+TDTail;
                v +=TDDownUploadSizeHeader+DataArray[i].updownsize+TDTail;
                v +=TDSeederHeader+DataArray[i].seeder+TDTail;
                v +=TDETARatioHeader+DataArray[i].etaratio+TDTail;
                v +=TDUprateHeader+DataArray[i].uprate+TDTail;
                v +=TDDownrateHeader+DataArray[i].downrate+TDTail;
		v +=TRTail;
        }
	v +="</table>";
	layerWrite("myDiv", null, v);
}
function getselectedcindex(clients,ti)
{
	var i=0;
	for(i=0;i<DataArray.length;i++)
	{
		if(DataArray[i].index == ti)
		{
			if(DataArray[i].cindex == "-1")
			{
				selectedInvalidCtorrent=1;
			}
			clients+="/"+DataArray[i].cindex;
		}
	}
	return clients;
}
function getselectedindex()
{
	var fm=document.formBTclient;
	var i;
	var count=0;
	var clients="";
	var torrents="";
	if(DataArray.length == 1)
	{
		if(fm.CHECKBOX.checked)
                {       
                      torrents="/"+fm.CHECKBOX.value;  
		      count++;
		      clients=getselectedcindex(clients,fm.CHECKBOX.value);
                }
	}else if(DataArray.length > 1)
	{
		for(i=0;i<DataArray.length;i++)
		{
			if(fm.CHECKBOX[i].checked)
			{	
				torrents+="/"+fm.CHECKBOX[i].value;	
				count++;
		      		clients=getselectedcindex(clients,fm.CHECKBOX[i].value);
			}	
		}
	}
	if(clients != "" || torrents !="")
	{
		fm.clientsindex.value=clients;
		fm.torrentsindex.value=torrents;
	}
	return count;
}
function onoperation(operation)
{
	var fm=document.formBTclient;
	var count;
	count=getselectedindex();
	if(0==count)
	{
		alert("please choose at least one torrent!");
		return false;
	}
	if(operation == "info" || operation == "details")
	{
		if(count > 1)
		{
			alert("please choose only one torrent!!");
			return false;
		}
		
	}
	else if(operation == "delete")
	{
	  if(false==confirm("Are you sure??"))
		return false;
	}
	else if(operation == "continue")
	{
		/*only support pause command,pause client when it paused  means continue*/
		operation="pause";
	}
	//alert(fm.clientsindex.value);
	//alert(fm.torrentsindex.value);
	fm.operation.value=operation;
	fm.submit();
}

</SCRIPT>
</head>

<body onload="initData();">
<blockquote>
<h2><font color="#0000FF">BT Controller</font></h2>
<table border=0 width="800" cellspacing=0 cellpadding=0>
  <tr><font size=2>
  status for BT.
  </tr>
  <tr><hr size=1 noshade align=top></tr>
</table>
<form action="/boafrm/formBTBasicSetting" method=POST name="formBT">
<table border='1' width="580" align=top>
<tr><td width=26%><font size=2>BT Enabled</td><td width = 74%><INPUT type=checkbox name=bt_enabled value=1></td></tr>
<tr><td width=26%><font size=2>BT Download Directory</td><td width = 74%><INPUT type=text name=btdownloaddir size=64 value="<%getInfo("BTDDir");%>"></td></tr>
<tr><td width=26%><font size=2>BT Upload Directory</td><td width= 74%><INPUT type=text name=btuploaddir size=64 value="<%getInfo("BTUDir");%>"></td></tr>
<tr><td width=26%><font size=2>Total Download Limit [KB/s]</td><td width= 74%><INPUT type=text name=totaldlimit size=64 value="<%getInfo("BTdlimit");%>"></td></tr>
<tr><td width=26%><font size=2>Total Upload Limit [KB/s]</td><td width= 74%><INPUT type=text name=totalulimit size=64 value="<%getInfo("BTulimit");%>"></td></tr>
<tr><td width=26%><font size=2>Refresh Time [s]</td><td width= 74%><INPUT type=text name=refreshtime size=64 value="<%getInfo("BTrefreshtime");%>"></td></tr>
</table>
<input type=hidden name=nextwebpage value="/bt.htm">
<input type="submit" value="save" name="save">
</form>
<tr><hr size=1 noshade align=top></tr>
<form action="/boafrm/formBTClientSetting" method=POST name="formBTclient">
<DIV id="myDiv"></DIV>
<input type="button" value="New Torrent" onclick=window.open("/btnewtorrent.htm","","width=800,height=600,scrollbars=yes,top=100,left=200") name="new torrent">
<input type="button" value="start" onclick=onoperation(this.value) name="start">
<input type="button" value="pause" onclick=onoperation(this.value) name="pause">
<input type="button" value="stop" onclick=onoperation(this.value) name="stop">
<input type="button" value="update" onclick=onoperation(this.value) name="update">
<input type="button" value="delete" onclick=onoperation(this.value) name="btdelete">
<input type="button" value="details" onclick=onoperation(this.value) name="details">
<input type="button" value="info" onclick=onoperation(this.value) name="info">
<tr><hr size=1 noshade align=top></tr>
<td><font size=2>Number of the actually torrents</font><input name="torrentsnum" value="0" readonly border={1px,solid,#FFFFFF}></td>
<td><font size=2>Upload:</font><input name="uploadrate" value="0" readonly border:1px solid #E8ECE8><font size=2>KB/s<font></td>
<td><font size=2>Download:</font><input name="downloadrate" value="0" readonly border:1px solid #E8ECE8><font size=2>KB/s<font></td>
<input type=hidden name=nextwebpage value="/bt.htm">
<input type=hidden name=operation value="">
<input type=hidden name=clientsindex value="">
<input type=hidden name=torrentsindex value="">
</form>
</blockquote>
</body>
</html>
