<html>
<! Copyright (c) Realtek Semiconductor Corp., 2003. All Rights Reserved. ->
<head>
<title>Realtek Http file server</title>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<% getIndex("no-cache"); %>
<script type="text/javascript" src="util_gw.js"> </script>

<script>
	var time=0;
	var delay_time=1000;
	var loop_num=0;
	function show_div(show,id) 
	{
		if(show)
		{
			document.getElementById(id).style.display  = "block";
		}else
		{
			document.getElementById(id).style.display  = "none";
		}
	}

	function sendClickedRemove(file)
	{ 
		var F=document.usb_upload;
		var act_query=F.action.split("?");
		var destDir=act_query[1].split("=");
		if(!confirm("Are you sure to remove "+file)) 
			return false;
		if(BrowserDetect.browser=="Explorer")
		{
			F.action="/boafrm/formusbdisk_uploadfile?del_file="+encodeURIComponent(destDir[1])+encodeURIComponent(file);
		}else
		{
			F.action="/boafrm/formusbdisk_uploadfile?del_file="+destDir[1]+file;
		}
		F.submit();
	}
	
	function sendClicked()
	{
		var i=1;
		if(BrowserDetect.browser=="Explorer")
		{
			if(document.usb_upload.uploadedfile.value == "")
			{
				document.usb_upload.uploadedfile.focus();
				alert('File name can not be empty !');
				return false;
			}
			while(document.getElementById("row"+i))
			{
				if(document.getElementById("row"+i).innerHTML==document.usb_upload.uploadedfile.value)
				{
					alert("File exist!!");
					return;
				}
				i++;
			}

			__update_state(document.usb_upload.uploadedfile.value);
		}else
		{
			if(File_Name == "")
			{
				alert('File name can not be empty !');
				return false;
			}
			while(document.getElementById("row"+i))
			{
				if(document.getElementById("row"+i).innerHTML==File_Name)
				{
					alert("File exist!!");
					return;
				}
				i++;
			}
			__update_state(File_Name);
		}
	}
	
	function t_disable(table_id)
	{
		var inputs=document.getElementById(table_id).getElementsByTagName('input');
		var test_href;
		for(var i=0; i<inputs.length; ++i)
		{
			inputs[i].disabled=true;
		}
		test_href= document.getElementById("rowa0");
		test_href.removeAttribute("href");
		test_href= document.getElementById("rowa1");
		test_href.removeAttribute("href");
		test_href= document.getElementById("rowa2");
		test_href.removeAttribute("href");
		test_href= document.getElementById("rowa10");
		test_href.removeAttribute("href");
		var total_entry=inputs.length+1;
		var i;
		for(i=1;i<total_entry;i++)
		{
			var entryname="row"+i;
			test_href=document.getElementById(entryname);
			test_href.removeAttribute("href");
		}
	}
	var __AjaxReq = null;
	var __AjaxReqIE = null;
	var REDIR_URL="";
	var POST_URL="";
	var File_Name="";
	var Magic_Key="";
	var KeepQuery="1";
	function update_usb_connect(status)
	{
		if(status=="OK")
		{
			if(1)
			{
				document.usb_upload.action="/boafrm/formusbdisk_uploadfile?dest_dir="+encodeURIComponent(document.getElementById("current_directory").innerHTML)+"&MKey="+Magic_Key;
			}
			else
			{}
			if(BrowserDetect.browser=="Explorer")
			{
				uploadFileIE();
			}else
			{
				uploadFile();
				document.getElementById("fileToUpload").disabled=true;
				document.getElementById("Upload").disabled=true;
			}
			t_disable("table1");
		}else
		{
			show_div(false, "progress_div"); 
			alert(status);location.reload(true);
		}
	}
	
	function __createRequest()
	{
		var request = null;
		try 
		{ 
			request = new XMLHttpRequest(); 
		}
		catch (trymicrosoft)
		{
			try 
			{ 
				request = new ActiveXObject("Msxml2.XMLHTTP"); 
			}
			catch (othermicrosoft)
			{
				try 
				{ 
					request = new ActiveXObject("Microsoft.XMLHTTP"); 
				}
				catch (failed)
				{
					request = null;
				}
			}
		}
		if (request == null)
		{ 
			alert("Error creating request object !");
		}
		return request;
	}
	function __send_request(url)
	{
		if (__AjaxReq == null) __AjaxReq = __createRequest();
		__AjaxReq.open("GET", url, true);
		__AjaxReq.onreadystatechange = __update_page;
		__AjaxReq.send(null);
	}
	function generate_random_str()
	{
		var d = new Date();
		var str=d.getFullYear()+"."+(d.getMonth()+1)+"."+d.getDate()+"."+d.getHours()+"."+d.getMinutes()+"."+d.getSeconds();
		return str;
	}
	function __update_page()
	{
		var conn_msg="";
		if (__AjaxReq != null && __AjaxReq.readyState == 4)
		{
			if (__AjaxReq.responseText.substring(0,3)=="var")
			{
				eval(__AjaxReq.responseText);
				switch (__result[0])
				{
					case "OK":
					update_usb_connect(__result[1]);
					default :
					break;
				}
				delete __result;
			}
		}
	}
	function uploadFile() 
	{
		var fd = new FormData();
		fd.append("fileToUpload", document.getElementById('fileToUpload').files[0]);
		var xhr = __createRequest();
		xhr.upload.addEventListener("progress", uploadProgress, false);
		xhr.addEventListener("load", uploadComplete, false);
		xhr.addEventListener("error", uploadFailed, false);
		xhr.addEventListener("abort", uploadCanceled, false);
		xhr.open("POST",POST_URL, true);
		show_div(true, "progress_div");
		show_div(true, "progressNumber");
		xhr.send(fd);
	}
	function FillprogressBar(BarLen) 
	{
		var node = document.getElementById('progress_bar');
		var w    = Math.round(BarLen * 200 /100);
		node.style.width = parseInt(w) + 'px';
	}
	function uploadProgress(evt) 
	{
		if (evt.lengthComputable) 
		{
			var percentComplete = Math.round(evt.loaded * 100 / evt.total);
			document.getElementById('progressNumber').innerHTML = 'Please wait... '+percentComplete.toString() + '%';
			FillprogressBar(percentComplete);
		}
		else 
		{
			document.getElementById('progressNumber').innerHTML = 'unable to compute';
		}
	}
	function uploadComplete(evt) 
	{
		location.href=REDIR_URL+'?upload_st='+new Date().getTime();
	}
	function uploadFailed(evt) 
	{
		alert('There was an error attempting to upload the file.');
	}
	function uploadCanceled(evt) 
	{
		alert('The upload has been canceled by the user or the browser dropped the connection.');
	}
	function fileSelected() 
	{
		var file = 0;
		if(document.getElementById('fileToUpload').files)
			file=document.getElementById('fileToUpload').files[0];
		if (file) 
		{
			var fileSize = 0;
			if (file.size > 1024 * 1024)
			fileSize = (Math.round(file.size * 100 / (1024 * 1024)) / 100).toString() + 'MB';
			else
			fileSize = (Math.round(file.size * 100 / 1024) / 100).toString() + 'KB';
			File_Name = file.name;
			document.getElementById('fileName').innerHTML = 'Name: ' + file.name;
			document.getElementById('fileSize').innerHTML = 'Size: ' + fileSize;
			document.getElementById('fileType').innerHTML = 'Type: ' + file.type;
		}
	}
	
	function FillprogressBarIE(TotalLen, CurrentLen)
	{
		if(isNaN(TotalLen) && isNaN(CurrentLen))
		{
		}else
		{
			var node = document.getElementById('progress_bar');
			if(TotalLen > 0 && CurrentLen > 0)
			{
				var currentbytes=Math.round(CurrentLen* 100 /TotalLen);
				var w    = Math.round(currentbytes * 300 /100);
				if(currentbytes < 100)
					KeepQuery="1";
				else
					KeepQuery="0";
				node.style.width =parseInt(w)+"px";
				document.getElementById('progressNumber').innerHTML = 'Please wait... '+currentbytes.toString() + '%';
			}else
			{
				document.getElementById('progressNumber').innerHTML = 'Please wait... ';
			}
		}
	}
	
	function __update_pageIE()
	{

		if (__AjaxReqIE != null && __AjaxReqIE.readyState == 4)
		{
			if (__AjaxReqIE.responseText.substring(0,3)=="var")
			{
				eval(__AjaxReqIE.responseText);
				switch (__result[0])
				{
				case "OK":
					FillprogressBarIE(parseInt(__result[1], 10),parseInt(__result[2], 10));
					break;
				default :
					break;
				}
				if(KeepQuery == "1")
					setTimeout("__update_stateIE()", 1000);
				delete __result;
			}
		}
	}
	
	function __update_stateIE()
	{__send_requestIE("/upload_st.htm?MKey="+Magic_Key);}
	
	function uploadFileIE()
	{
		document.usb_upload.submit();
		document.getElementById("uploadedfile").disabled=true;
		document.getElementById("Upload").disabled=true;
		__update_stateIE();
		show_div(true, "progress_div");
		show_div(true, "progressNumber");
	}
	function __send_requestIE(url)
	{
		if (__AjaxReqIE == null) __AjaxReqIE = __createRequest();
		__AjaxReqIE.open("GET", url, true);
		__AjaxReqIE.onreadystatechange = __update_pageIE;
		__AjaxReqIE.send(null);
	}
	function chk_CurrentDIRuri(this_id)
	{
		var CurrentDIR=document.getElementById("current_directory").innerHTML;
		var URIStringOffset;
		var URIStringA;
		var URIStringOffsetA;
		var URIStringB;
		var URIStringOffsetB;
		var URIStringC;
		var URIString;
		var herfURi=this_id.href;
		var CurrentherfURi=location.href;
		if(herfURi.indexOf(CurrentDIR) == -1 && herfURi.indexOf(CurrentherfURi) == -1)
		{
			URIStringOffset = herfURi.indexOf("/");
			URIStringA= herfURi.substr(URIStringOffset+1);
			URIStringOffsetA  = URIStringA.indexOf("/");
			URIStringB= URIStringA.substr(URIStringOffsetA+1);
			URIStringOffsetB = URIStringB.indexOf("/");
			URIStringC= URIStringB.substr(URIStringOffsetB+1);
			herfURi = URIStringC;
			URIString =encodeURIComponent(herfURi);
		}else
		{
			URIStringOffset = herfURi.indexOf("/");
			URIStringA= herfURi.substr(URIStringOffset+1);
			URIStringOffsetA  = URIStringA.indexOf("/");
			URIStringB= URIStringA.substr(URIStringOffsetA+1);
			URIStringOffsetB = URIStringB.indexOf("/");
			URIStringC= URIStringB.substr(URIStringOffsetB+1);
			URIString =encodeURIComponent(URIStringC);
		}
		if(URIString.search(/%257B/g) != -1)
		{
			URIString = URIString.replace(/%257B/g,"%7B");
		}
		if(URIString.search(/%257D/g) != -1)
		{
			URIString = URIString.replace(/%257D/g,"%7D");
		}
		if(URIString.search(/%2524/g) != -1)
		{
			URIString = URIString.replace(/%2524/g,"%24");
		}
		if(URIString.search(/%252F/g) != -1)
		{
			URIString = URIString.replace(/%252F/g,"%2F");
		}
		if(URIString.search(/%2520/g) != -1)
		{
			URIString = URIString.replace(/%2520/g,"%20");
		}
		if(BrowserDetect.browser=="Explorer")
		{
			this_id.href ="/"+URIString;
		}
		return true;
	}
	
	var BrowserDetect = 
	{
		init: function()
			{
				this.browser = this.searchString(this.dataBrowser) || "An unknown browser";
				this.version = this.searchVersion(navigator.userAgent)|| this.searchVersion(navigator.appVersion)|| "an unknown version";
				this.OS = this.searchString(this.dataOS) || "an unknown OS";
			},
		searchString: function (data) 
			{
				for (var i=0;i<data.length;i++)
				{	
					var dataString = data[i].string;
					var dataProp = data[i].prop;
					this.versionSearchString = data[i].versionSearch || data[i].identity;
					if (dataString) 
					{	
						if (dataString.indexOf(data[i].subString) != -1)
						{
							return data[i].identity;
						}
					}else 
						if (dataProp)
						{
							return data[i].identity;
						}
				}
			},
		searchVersion: function (dataString) 
			{
				var index = dataString.indexOf(this.versionSearchString);
				if(index == -1)
					{return;}
				else
					{return parseFloat(dataString.substring(index+this.versionSearchString.length+1));	}
			},
		dataBrowser: 
			[
				{string: navigator.userAgent,subString: "Chrome",identity: "Chrome"},
				{string: navigator.userAgent,subString: "OmniWeb",versionSearch: "OmniWeb/",identity: "OmniWeb"	},
				{string: navigator.vendor,subString: "Apple",identity: "Safari",versionSearch: "Version"},
				{prop: window.opera,identity: "Opera"},
				{string: navigator.vendor,subString: "iCab",	identity: "iCab"},
				{string: navigator.vendor,subString: "KDE",identity: "Konqueror"	},
				{string: navigator.userAgent,subString: "Firefox",identity: "Firefox"},
				{string: navigator.vendor,subString: "Camino",	identity: "Camino"},
				{string: navigator.userAgent,subString: "Netscape",identity: "Netscape"},
				{string: navigator.userAgent,subString: "MSIE",identity: "Explorer",versionSearch: "MSIE"},
				{string: navigator.userAgent,subString: "Gecko",identity: "Mozilla",versionSearch: "rv"},
				{string: navigator.userAgent,subString: "Mozilla",identity: "Netscape",	versionSearch: "Mozilla"}
			],
		dataOS : 
			[
				{string: navigator.platform,	subString: "Win",	identity: "Windows"},
				{string: navigator.platform,subString: "Mac",identity: "Mac"	},
				{string: navigator.userAgent,subString: "iPhone",identity: "iPhone/iPod"},
				{string: navigator.platform,subString: "Linux",identity: "Linux"}
			]
	};
	
	function __update_state(filename)
	{
		//var cur_dir=document.getElementById("current_directory").innerHTML;
		if(BrowserDetect.browser=="Explorer")
		{
			__send_request("/usb_fileinfo.htm?file="+encodeURIComponent("<%getInfo("current_directory")%>")+"*"+encodeURIComponent(filename));
		}else
		{
			__send_request("/usb_fileinfo.htm?file=<%getInfo("current_directory")%>*"+filename);
		}
	}

	<%dump_httpFileDir_init()%>

</script>

</head>
<body onload=init();>
<h1>Index of <%getInfo("current_directory")%></h1>
<table id="table1" name="table1" cellSpacing=1 cellPadding=2 width=100% border=0>
<%dump_ListHead()%>
<tr><td colspan="4"><hr size=1 noshade align=top></td></tr>
<%dumpDirectList()%>
<tr><td colspan="4"><hr size=1 noshade align=top></td></tr></table>
<form name="usb_upload" enctype="multipart/form-data" action="/boafrm/formusbdisk_uploadfile?dest_dir=<%getInfo("current_directory")%>" method="post"><p>
<%dump_uploadDiv()%>
<div id="current_directory" style="display:none"></div></body>
</html>
