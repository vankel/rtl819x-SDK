/* header auto-generated by pidl */

#include <stdint.h>

#ifndef _HEADER_misc
#define _HEADER_misc

struct GUID {
	uint32_t time_low;
	uint16_t time_mid;
	uint16_t time_hi_and_version;
	uint8_t clock_seq[2];
	uint8_t node[6];
}/* [noprint,gensize,public,noejs] */;

struct ndr_syntax_id {
	struct GUID uuid;
	uint32_t if_version;
}/* [public] */;

struct policy_handle {
	uint32_t handle_type;
	struct GUID uuid;
}/* [public] */;

enum netr_SchannelType
#ifndef USE_UINT_ENUMS
 {
	SEC_CHAN_WKSTA=2,
	SEC_CHAN_DOMAIN=4,
	SEC_CHAN_BDC=6
}
#else
 { __donnot_use_enum_netr_SchannelType=0x7FFFFFFF}
#define SEC_CHAN_WKSTA ( 2 )
#define SEC_CHAN_DOMAIN ( 4 )
#define SEC_CHAN_BDC ( 6 )
#endif
;

enum netr_SamDatabaseID
#ifndef USE_UINT_ENUMS
 {
	SAM_DATABASE_DOMAIN=0,
	SAM_DATABASE_BUILTIN=1,
	SAM_DATABASE_PRIVS=2
}
#else
 { __donnot_use_enum_netr_SamDatabaseID=0x7FFFFFFF}
#define SAM_DATABASE_DOMAIN ( 0 )
#define SAM_DATABASE_BUILTIN ( 1 )
#define SAM_DATABASE_PRIVS ( 2 )
#endif
;

enum samr_RejectReason
#ifndef USE_UINT_ENUMS
 {
	SAMR_REJECT_OTHER=0,
	SAMR_REJECT_TOO_SHORT=1,
	SAMR_REJECT_IN_HISTORY=2,
	SAMR_REJECT_COMPLEXITY=5
}
#else
 { __donnot_use_enum_samr_RejectReason=0x7FFFFFFF}
#define SAMR_REJECT_OTHER ( 0 )
#define SAMR_REJECT_TOO_SHORT ( 1 )
#define SAMR_REJECT_IN_HISTORY ( 2 )
#define SAMR_REJECT_COMPLEXITY ( 5 )
#endif
;

#endif /* _HEADER_misc */
