/*
 *	This is an example configuration file for RIPng.
 */

# Yes, even shell-like comments work...

# Configure logging
#log syslog { debug, trace, info, remote, warning, error, auth, fatal, bug };
#log stderr all;
log "/var/log/bird6.log" all;

# Override router ID
router id 192.168.2.200;

# You can define your own symbols...
#define xyzzy = (120+10);
#define '1a-a1' = (30+40);

# Define a route filter...
#filter test_filter {
#	if net ~ 10.0.0.0/16 then accept;
#	else reject;
#}

#include "filters.conf";

# Turn on global debugging of all protocols
#debug protocols all;

# The direct protocol automatically generates device routes to
# all network interfaces. Can exist in as many instances as you wish
# if you want to populate multiple routing tables with device routes.
protocol direct {
	interface "eth*";	# Restrict network interfaces it works with
}

# This pseudo-protocol performs synchronization between BIRD's routing
# tables and the kernel. If your kernel supports multiple routing tables
# (as Linux 2.2.x does), you can run multiple instances of the kernel
# protocol and synchronize different kernel tables with different BIRD tables.
protocol kernel {
	learn;			# Learn all alien routes from the kernel
#	persist;		# Don't remove routes on bird shutdown
	scan time 20;		# Scan kernel routing table every 20 seconds
	import all;		# Default is import all
	export all;		# Default is export none
#	kernel table 5;		# Kernel table to synchronize with (default: main)
}

# This pseudo-protocol watches all interface up/down events.
protocol device {
	scan time 10;		# Scan interfaces every 10 seconds
}

# RIP aka Rest In Pieces...
protocol rip rip6 {	# You can also use an explicit name
	export all;
	import all;
#	preference xyzzy;
	debug all;
#	port 521;
#	period 7;
#	infinity 16;
#	garbage time 60;
#	interface "*" { mode broadcast; };
	interface "eth0" { metric 1; mode multicast; };
	interface "eth1" { metric 1; mode multicast; };
	honor neighbor;		# To whom do we agree to send the routing table
#	honor always;
#	honor never;
#	passwords {
#		password "nazdar";
#	};
	authentication none;
	import filter { print "importing"; accept; };
	export filter { print "exporting"; accept; };
}

