What's NDP
===========================================================
The Neighbor Discovery Protocol (NDP) is a protocol in the Internet Protocol Suite used with Internet Protocol Version 6 (IPv6). It operates in the Link Layer of the Internet model (RFC 1122) and is responsible for address autoconfiguration of nodes, discovery of other nodes on the link, determining the Link Layer addresses of other nodes, duplicate address detection, finding available routers and Domain Name System (DNS) servers, address prefix discovery, and maintaining reachability information about the paths to other active neighbor nodes (RFC 4861). (Wikipedia)



Why need NDP proxy
===========================================================
Before an IPv6 packet can be sent to a host, that host's link-layer address must first be discovered. This is done by sending a Neighbor Solicitation message containing the requested target IPv6 address to a specific multicast address.  If a host have configured a matching IP, that host will then respond with a Neighbor Advertisement message, and provide it's link-layer address.

Let's say you want to route some IPs to another interface, and your ISP isn't truly routing your subnet to your host. It means that your host will have respond to Neighbor Solicitation messages for IPs it haven't configured in order to be able to route them.
Then host need to add NDP proxy to the IPs.



Linux kernel NDP proxy
=========================================================
Linux have a limited support for proxying Neighbor Solicitation messages by simply answering to any messages where the target IP can be found in the host's neighbor proxy table. To make this work you need to enable "proxy_ndp", and then add each single host to the neighbor proxy table by typing something like:
      ip -6 neigh add proxy <ip> dev <if>
   Unfortunately, it doesn't support listing proxies, and as I said,only individual IPs are supported. No subnets.



ndppd
========================================================
'ndppd' solves this by listening for Neighbor Solicitation messages on an interface, then query the internal interfaces for that target IP before finally sending a Neighbor Advertisement message.
In our config file, we just send all wan(eth1) NS/NA messages to lan(br0) and send all lan(br0) NS/NA messages to wan(eth1)



How to test ndppd
===========================================================
1.make users_menuconfig
  select 
	[*] ndp proxy

2.make generate image and load to board

3. build ipv6 environment
  Suppose that:
  wan use Stateless Address Autoconfiguration get ipv6 address 2001:db8:1118:2:2e0:4cff:fe81:96c9/64
  wan connect to host address is 2001:db8:1118:2:67d:7bff:fe65:70c3/64

  lan set addr 2001:db8:1118:2::1/128, use dhcpv6 address pool is from 2001:db8:1118:2::10 to 2001:db8:1118:2::ff.
  lan host get ip 2001:db8:1118:2::10

4.Then add a route to lan to cover all lan ip:
	route -A inet6 add 2001:db8:1118:2::1/120 dev br0
  Route to wan ip will use default gw.
  (If lan also use SLAAC, it's hard to seperate lan/wan ip, and the route table must add all lan hosts and wan hosts)

5.Try to ping lan host form wan host or ping wan host from lan host
  lan host: ping6 2001:db8:1118:2:67d:7bff:fe65:70c3 
   (be sure ping6 from 2001:db8:1118:2::10)

  wan host: ping6 2001:db8:1118:2::10
    (be sure ping6 from 2001:db8:1118:2:67d:7bff:fe65:70c3)

 all will get reply and it's OK

6.Try to see neigh table
  wan host: ip -6 neigh
	2001:db8:1118:2::10 dev eth0 lladdr 00:e0:4c:81:96:c9 router REACHABLE
	2001:db8:1118:2:2e0:4cff:fe81:96c9 dev eth0 lladdr 00:e0:4c:81:96:c9 router STALE
  00:e0:4c:81:96:c9 is wan mac address, lan host IP and wan IP both in wan host's neigh table

